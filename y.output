Terminals unused in grammar

    STRUCT
    TYPEDEF
    UNION


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration

    5 function_definition: declaration_specifiers declarator declaration_list compound_statement
    6                    | declaration_specifiers declarator compound_statement

    7 declaration_list: declaration
    8                 | declaration_list declaration

    9 declaration: declaration_specifiers init_declarator_list ';'
   10            | declaration_specifiers ';'

   11 declaration_specifiers: storage_class_specifier declaration_specifiers
   12                       | storage_class_specifier
   13                       | type_specifier declaration_specifiers
   14                       | type_specifier
   15                       | type_qualifier declaration_specifiers
   16                       | type_qualifier
   17                       | function_specifier declaration_specifiers
   18                       | function_specifier

   19 init_declarator_list: init_declarator
   20                     | init_declarator_list ',' init_declarator

   21 init_declarator: declarator
   22                | declarator '=' initializer

   23 storage_class_specifier: EXTERN
   24                        | STATIC
   25                        | AUTO
   26                        | REGISTER

   27 type_specifier: VOID
   28               | CHAR
   29               | SHORT
   30               | INT
   31               | LONG
   32               | FLOAT
   33               | DOUBLE
   34               | SIGNED
   35               | UNSIGNED
   36               | BOOL
   37               | COMPLEX
   38               | IMAGINARY
   39               | enum_specifier

   40 specifier_qualifier_list: type_specifier specifier_qualifier_list
   41                         | type_specifier
   42                         | type_qualifier specifier_qualifier_list
   43                         | type_qualifier

   44 enum_specifier: ENUM IDENTIFIER '{' enumerator_list '}'
   45               | ENUM '{' enumerator_list '}'
   46               | ENUM IDENTIFIER '{' enumerator_list ',' '}'
   47               | ENUM '{' enumerator_list ',' '}'
   48               | ENUM IDENTIFIER

   49 enumerator_list: enumerator
   50                | enumerator_list ',' enumerator

   51 enumerator: enumeration_constant
   52           | enumeration_constant '=' constant_expression

   53 enumeration_constant: IDENTIFIER

   54 type_qualifier: CONST
   55               | RESTRICT
   56               | VOLATILE

   57 function_specifier: INLINE

   58 declarator: pointer direct_declarator
   59           | direct_declarator

   60 direct_declarator: IDENTIFIER
   61                  | '(' declarator ')'
   62                  | direct_declarator '[' type_qualifier_list assignment_expression ']'
   63                  | direct_declarator '[' type_qualifier_list ']'
   64                  | direct_declarator '[' assignment_expression ']'
   65                  | direct_declarator '[' ']'
   66                  | direct_declarator '[' STATIC type_qualifier_list assignment_expression ']'
   67                  | direct_declarator '[' STATIC assignment_expression ']'
   68                  | direct_declarator '[' type_qualifier_list STATIC assignment_expression ']'
   69                  | direct_declarator '[' type_qualifier_list '*' ']'
   70                  | direct_declarator '[' '*' ']'
   71                  | direct_declarator push_sym '(' parameter_type_list ')'
   72                  | direct_declarator push_sym '(' identifier_list ')'
   73                  | direct_declarator push_sym '(' ')'

   74 push_sym: ε

   75 pointer: '*' type_qualifier_list
   76        | '*'
   77        | '*' type_qualifier_list pointer
   78        | '*' pointer

   79 type_qualifier_list: type_qualifier
   80                    | type_qualifier_list type_qualifier

   81 parameter_type_list: parameter_list
   82                    | parameter_list ',' ELIP

   83 parameter_list: parameter_declaration
   84               | parameter_list ',' parameter_declaration

   85 parameter_declaration: declaration_specifiers declarator
   86                      | declaration_specifiers

   87 identifier_list: IDENTIFIER
   88                | identifier_list ',' IDENTIFIER

   89 type_name: specifier_qualifier_list

   90 initializer: assignment_expression
   91            | '{' initializer_list '}'
   92            | '{' initializer_list ',' '}'

   93 initializer_list: designation initializer
   94                 | initializer
   95                 | initializer_list ',' designation initializer
   96                 | initializer_list ',' initializer

   97 designation: designator_list '='

   98 designator_list: designator
   99                | designator_list designator

  100 designator: '[' constant_expression ']'
  101           | '.' IDENTIFIER

  102 statement: labeled_statement
  103          | compound_statement
  104          | expression_statement
  105          | selection_statement
  106          | iteration_statement
  107          | jump_statement

  108 labeled_statement: IDENTIFIER ':' statement
  109                  | CASE constant_expression ':' statement
  110                  | DEFAULT ':' statement

  111 compound_statement: '{' block_item_list '}'
  112                   | '{' '}'

  113 block_item_list: block_item
  114                | block_item_list address_nonterm block_item

  115 block_item: declaration
  116           | statement

  117 expression_statement: expression ';'
  118                     | ';'

  119 selection_statement: IF '(' bool_expression ')' address_nonterm statement jump_nonterm ELSE address_nonterm statement
  120                    | IF '(' bool_expression ')' address_nonterm statement jump_nonterm
  121                    | SWITCH '(' expression ')' statement

  122 iteration_statement: WHILE '(' address_nonterm bool_expression ')' address_nonterm statement jump_nonterm
  123                    | DO address_nonterm statement address_nonterm WHILE '(' bool_expression ')' ';'
  124                    | FOR '(' temp ';' address_nonterm bool_temp ';' address_nonterm temp jump_nonterm ')' address_nonterm statement jump_nonterm
  125                    | FOR '(' declaration ';' temp ';' temp ')' statement

  126 temp: expression
  127     | ε

  128 bool_temp: bool_expression
  129          | ε

  130 bool_expression: expression

  131 jump_statement: GOTO IDENTIFIER ';'
  132               | CONTINUE ';'
  133               | BREAK ';'
  134               | RETURN temp ';'

  135 primary_expression: IDENTIFIER
  136                   | CONSTANT
  137                   | STRING_LITERAL
  138                   | '(' expression ')'

  139 postfix_expression: primary_expression
  140                   | postfix_expression '[' expression ']'
  141                   | postfix_expression '(' argument_expression_list ')'
  142                   | postfix_expression '(' ')'
  143                   | postfix_expression '.' IDENTIFIER
  144                   | postfix_expression ACC IDENTIFIER
  145                   | postfix_expression INC
  146                   | postfix_expression DEC
  147                   | '(' type_name ')' '{' initializer_list '}'
  148                   | '(' type_name ')' '{' initializer_list ',' '}'

  149 argument_expression_list: assignment_expression
  150                         | argument_expression_list ',' assignment_expression

  151 unary_expression: postfix_expression
  152                 | INC unary_expression
  153                 | DEC unary_expression
  154                 | '&' unary_expression
  155                 | '*' cast_expression
  156                 | '+' cast_expression
  157                 | '-' cast_expression
  158                 | '~' cast_expression
  159                 | '!' cast_expression
  160                 | SIZEOF unary_expression
  161                 | SIZEOF '(' type_name ')'

  162 cast_expression: unary_expression
  163                | '(' type_name ')' cast_expression

  164 nb_cast_expression: cast_expression

  165 multiplicative_expression: cast_expression
  166                          | nb_multiplicative_expression '*' nb_cast_expression
  167                          | nb_multiplicative_expression '/' nb_cast_expression
  168                          | nb_multiplicative_expression '%' nb_cast_expression

  169 nb_multiplicative_expression: multiplicative_expression

  170 additive_expression: multiplicative_expression
  171                    | nb_additive_expression '+' nb_multiplicative_expression
  172                    | nb_additive_expression '-' nb_multiplicative_expression

  173 nb_additive_expression: additive_expression

  174 shift_expression: additive_expression
  175                 | nb_shift_expression SHL nb_additive_expression
  176                 | nb_shift_expression SHR nb_additive_expression

  177 nb_shift_expression: shift_expression

  178 relational_expression: shift_expression
  179                      | nb_relational_expression '<' nb_shift_expression
  180                      | nb_relational_expression '>' nb_shift_expression
  181                      | nb_relational_expression LTE nb_shift_expression
  182                      | nb_relational_expression GTE nb_shift_expression

  183 nb_relational_expression: relational_expression

  184 equality_expression: relational_expression
  185                    | nb_equality_expression EQUAL nb_relational_expression
  186                    | nb_equality_expression NEQUAL nb_relational_expression

  187 nb_equality_expression: equality_expression

  188 and_expression: equality_expression
  189               | nb_and_expression '&' nb_equality_expression

  190 nb_and_expression: and_expression

  191 exclusive_or_expression: and_expression
  192                        | nb_exclusive_or_expression '^' nb_and_expression

  193 nb_exclusive_or_expression: exclusive_or_expression

  194 inclusive_or_expression: exclusive_or_expression
  195                        | nb_inclusive_or_expression '|' nb_exclusive_or_expression

  196 nb_inclusive_or_expression: inclusive_or_expression

  197 logical_and_expression: inclusive_or_expression
  198                       | bool_logical_and_expression LogAND address_nonterm bool_inclusive_or_expression

  199 logical_or_expression: logical_and_expression
  200                      | bool_logical_or_expression LogOR address_nonterm bool_logical_and_expression

  201 bool_inclusive_or_expression: inclusive_or_expression

  202 bool_logical_or_expression: logical_or_expression

  203 bool_logical_and_expression: logical_and_expression

  204 conditional_expression: logical_or_expression
  205                       | bool_logical_or_expression '?' address_nonterm expression jump_nonterm ':' address_nonterm conditional_expression jump_nonterm

  206 assignment_expression: conditional_expression
  207                      | unary_expression assignment_operator assignment_expression

  208 assignment_operator: '='
  209                    | AssSTAR
  210                    | AssDIV
  211                    | AssMOD
  212                    | AssPLUS
  213                    | AssMINUS
  214                    | AssSHL
  215                    | AssSHR
  216                    | AssBinAND
  217                    | AssXOR
  218                    | AssBinOR

  219 expression: assignment_expression
  220           | expression ',' assignment_expression

  221 constant_expression: conditional_expression

  222 address_nonterm: ε

  223 jump_nonterm: ε


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 159
    '%' (37) 168
    '&' (38) 154 189
    '(' (40) 61 71 72 73 119 120 121 122 123 124 125 138 141 142 147 148 161 163
    ')' (41) 61 71 72 73 119 120 121 122 123 124 125 138 141 142 147 148 161 163
    '*' (42) 69 70 75 76 77 78 155 166
    '+' (43) 156 171
    ',' (44) 20 46 47 50 82 84 88 92 95 96 148 150 220
    '-' (45) 157 172
    '.' (46) 101 143
    '/' (47) 167
    ':' (58) 108 109 110 205
    ';' (59) 9 10 117 118 123 124 125 131 132 133 134
    '<' (60) 179
    '=' (61) 22 52 97 208
    '>' (62) 180
    '?' (63) 205
    '[' (91) 62 63 64 65 66 67 68 69 70 100 140
    ']' (93) 62 63 64 65 66 67 68 69 70 100 140
    '^' (94) 192
    '{' (123) 44 45 46 47 91 92 111 112 147 148
    '|' (124) 195
    '}' (125) 44 45 46 47 91 92 111 112 147 148
    '~' (126) 158
    error (256)
    AUTO <null> (258) 25
    BREAK <null> (259) 133
    CASE <null> (260) 109
    CHAR <null> (261) 28
    CONST <null> (262) 54
    CONTINUE <null> (263) 132
    DEFAULT <null> (264) 110
    DO <null> (265) 123
    DOUBLE <null> (266) 33
    ELSE <null> (267) 119
    ENUM <null> (268) 44 45 46 47 48
    EXTERN <null> (269) 23
    FLOAT <null> (270) 32
    FOR <null> (271) 124 125
    GOTO <null> (272) 131
    IF <null> (273) 119 120
    INLINE <null> (274) 57
    INT <null> (275) 30
    LONG <null> (276) 31
    REGISTER <null> (277) 26
    RESTRICT <null> (278) 55
    RETURN <null> (279) 134
    SHORT <null> (280) 29
    SIGNED <null> (281) 34
    SIZEOF <null> (282) 160 161
    STATIC <null> (283) 24 66 67 68
    STRUCT <null> (284)
    SWITCH <null> (285) 121
    TYPEDEF <null> (286)
    UNION <null> (287)
    UNSIGNED <null> (288) 35
    VOID <null> (289) 27
    VOLATILE <null> (290) 56
    WHILE <null> (291) 122 123
    BOOL <null> (292) 36
    COMPLEX <null> (293) 37
    IMAGINARY <null> (294) 38
    ACC <null> (295) 144
    INC <null> (296) 145 152
    DEC <null> (297) 146 153
    SHL <null> (298) 175
    SHR <null> (299) 176
    LTE <null> (300) 181
    GTE <null> (301) 182
    EQUAL <null> (302) 185
    NEQUAL <null> (303) 186
    LogAND <null> (304) 198
    LogOR <null> (305) 200
    ELIP <null> (306) 82
    AssSTAR <null> (307) 209
    AssDIV <null> (308) 210
    AssMOD <null> (309) 211
    AssPLUS <null> (310) 212
    AssMINUS <null> (311) 213
    AssSHL <null> (312) 214
    AssSHR <null> (313) 215
    AssBinAND <null> (314) 216
    AssXOR <null> (315) 217
    AssBinOR <null> (316) 218
    IDENTIFIER <sym> (317) 44 46 48 53 60 87 88 101 108 131 135 143 144
    CONSTANT <sym> (318) 136
    STRING_LITERAL <str> (319) 137
    IFX (320)


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    translation_unit <sym> (91)
        on left: 1 2
        on right: 0 2
    external_declaration <sym> (92)
        on left: 3 4
        on right: 1 2
    function_definition <sym> (93)
        on left: 5 6
        on right: 3
    declaration_list <sym> (94)
        on left: 7 8
        on right: 5 8
    declaration <sym> (95)
        on left: 9 10
        on right: 4 7 8 115 125
    declaration_specifiers <sym> (96)
        on left: 11 12 13 14 15 16 17 18
        on right: 5 6 9 10 11 13 15 17 85 86
    init_declarator_list <sym> (97)
        on left: 19 20
        on right: 9 20
    init_declarator <sym> (98)
        on left: 21 22
        on right: 19 20
    storage_class_specifier <sym> (99)
        on left: 23 24 25 26
        on right: 11 12
    type_specifier <sym> (100)
        on left: 27 28 29 30 31 32 33 34 35 36 37 38 39
        on right: 13 14 40 41
    specifier_qualifier_list <sym> (101)
        on left: 40 41 42 43
        on right: 40 42 89
    enum_specifier <sym> (102)
        on left: 44 45 46 47 48
        on right: 39
    enumerator_list <sym> (103)
        on left: 49 50
        on right: 44 45 46 47 50
    enumerator <sym> (104)
        on left: 51 52
        on right: 49 50
    enumeration_constant <sym> (105)
        on left: 53
        on right: 51 52
    type_qualifier <sym> (106)
        on left: 54 55 56
        on right: 15 16 42 43 79 80
    function_specifier <sym> (107)
        on left: 57
        on right: 17 18
    declarator <sym> (108)
        on left: 58 59
        on right: 5 6 21 22 61 85
    direct_declarator <sym> (109)
        on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73
        on right: 58 59 62 63 64 65 66 67 68 69 70 71 72 73
    push_sym <sym> (110)
        on left: 74
        on right: 71 72 73
    pointer <sym> (111)
        on left: 75 76 77 78
        on right: 58 77 78
    type_qualifier_list <sym> (112)
        on left: 79 80
        on right: 62 63 66 68 69 75 77 80
    parameter_type_list <sym> (113)
        on left: 81 82
        on right: 71
    parameter_list <sym> (114)
        on left: 83 84
        on right: 81 82 84
    parameter_declaration <sym> (115)
        on left: 85 86
        on right: 83 84
    identifier_list <sym> (116)
        on left: 87 88
        on right: 72 88
    type_name <sym> (117)
        on left: 89
        on right: 147 148 161 163
    initializer <sym> (118)
        on left: 90 91 92
        on right: 22 93 94 95 96
    initializer_list <sym> (119)
        on left: 93 94 95 96
        on right: 91 92 95 96 147 148
    designation <sym> (120)
        on left: 97
        on right: 93 95
    designator_list <sym> (121)
        on left: 98 99
        on right: 97 99
    designator <sym> (122)
        on left: 100 101
        on right: 98 99
    statement <nl> (123)
        on left: 102 103 104 105 106 107
        on right: 108 109 110 116 119 120 121 122 123 124 125
    labeled_statement <nl> (124)
        on left: 108 109 110
        on right: 102
    compound_statement <nl> (125)
        on left: 111 112
        on right: 5 6 103
    block_item_list <nl> (126)
        on left: 113 114
        on right: 111 114
    block_item <nl> (127)
        on left: 115 116
        on right: 113 114
    expression_statement <nl> (128)
        on left: 117 118
        on right: 104
    selection_statement <nl> (129)
        on left: 119 120 121
        on right: 105
    iteration_statement <nl> (130)
        on left: 122 123 124 125
        on right: 106
    temp <sym> (131)
        on left: 126 127
        on right: 124 125 134
    bool_temp <sym> (132)
        on left: 128 129
        on right: 124
    bool_expression <sym> (133)
        on left: 130
        on right: 119 120 122 123 128
    jump_statement <nl> (134)
        on left: 131 132 133 134
        on right: 107
    primary_expression <sym> (135)
        on left: 135 136 137 138
        on right: 139
    postfix_expression <sym> (136)
        on left: 139 140 141 142 143 144 145 146 147 148
        on right: 140 141 142 143 144 145 146 151
    argument_expression_list <al> (137)
        on left: 149 150
        on right: 141 150
    unary_expression <sym> (138)
        on left: 151 152 153 154 155 156 157 158 159 160 161
        on right: 152 153 154 160 162 207
    cast_expression <sym> (139)
        on left: 162 163
        on right: 155 156 157 158 159 163 164 165
    nb_cast_expression <sym> (140)
        on left: 164
        on right: 166 167 168
    multiplicative_expression <sym> (141)
        on left: 165 166 167 168
        on right: 169 170
    nb_multiplicative_expression <sym> (142)
        on left: 169
        on right: 166 167 168 171 172
    additive_expression <sym> (143)
        on left: 170 171 172
        on right: 173 174
    nb_additive_expression <sym> (144)
        on left: 173
        on right: 171 172 175 176
    shift_expression <sym> (145)
        on left: 174 175 176
        on right: 177 178
    nb_shift_expression <sym> (146)
        on left: 177
        on right: 175 176 179 180 181 182
    relational_expression <sym> (147)
        on left: 178 179 180 181 182
        on right: 183 184
    nb_relational_expression <sym> (148)
        on left: 183
        on right: 179 180 181 182 185 186
    equality_expression <sym> (149)
        on left: 184 185 186
        on right: 187 188
    nb_equality_expression <sym> (150)
        on left: 187
        on right: 185 186 189
    and_expression <sym> (151)
        on left: 188 189
        on right: 190 191
    nb_and_expression <sym> (152)
        on left: 190
        on right: 189 192
    exclusive_or_expression <sym> (153)
        on left: 191 192
        on right: 193 194
    nb_exclusive_or_expression <sym> (154)
        on left: 193
        on right: 192 195
    inclusive_or_expression <sym> (155)
        on left: 194 195
        on right: 196 197 201
    nb_inclusive_or_expression <sym> (156)
        on left: 196
        on right: 195
    logical_and_expression <sym> (157)
        on left: 197 198
        on right: 199 203
    logical_or_expression <sym> (158)
        on left: 199 200
        on right: 202 204
    bool_inclusive_or_expression <sym> (159)
        on left: 201
        on right: 198
    bool_logical_or_expression <sym> (160)
        on left: 202
        on right: 200 205
    bool_logical_and_expression <sym> (161)
        on left: 203
        on right: 198 200
    conditional_expression <sym> (162)
        on left: 204 205
        on right: 205 206 221
    assignment_expression <sym> (163)
        on left: 206 207
        on right: 62 64 66 67 68 90 149 150 207 219 220
    assignment_operator <sym> (164)
        on left: 208 209 210 211 212 213 214 215 216 217 218
        on right: 207
    expression <sym> (165)
        on left: 219 220
        on right: 117 121 126 130 138 140 205 220
    constant_expression <sym> (166)
        on left: 221
        on right: 52 100 109
    address_nonterm <add> (167)
        on left: 222
        on right: 114 119 120 122 123 124 198 200 205
    jump_nonterm <nl> (168)
        on left: 223
        on right: 119 120 122 124 205


State 0

    0 $accept: • translation_unit $end

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    translation_unit         go to state 22
    external_declaration     go to state 23
    function_definition      go to state 24
    declaration              go to state 25
    declaration_specifiers   go to state 26
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 1

   25 storage_class_specifier: AUTO •

    $default  reduce using rule 25 (storage_class_specifier)


State 2

   28 type_specifier: CHAR •

    $default  reduce using rule 28 (type_specifier)


State 3

   54 type_qualifier: CONST •

    $default  reduce using rule 54 (type_qualifier)


State 4

   33 type_specifier: DOUBLE •

    $default  reduce using rule 33 (type_specifier)


State 5

   44 enum_specifier: ENUM • IDENTIFIER '{' enumerator_list '}'
   45               | ENUM • '{' enumerator_list '}'
   46               | ENUM • IDENTIFIER '{' enumerator_list ',' '}'
   47               | ENUM • '{' enumerator_list ',' '}'
   48               | ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    '{'         shift, and go to state 33


State 6

   23 storage_class_specifier: EXTERN •

    $default  reduce using rule 23 (storage_class_specifier)


State 7

   32 type_specifier: FLOAT •

    $default  reduce using rule 32 (type_specifier)


State 8

   57 function_specifier: INLINE •

    $default  reduce using rule 57 (function_specifier)


State 9

   30 type_specifier: INT •

    $default  reduce using rule 30 (type_specifier)


State 10

   31 type_specifier: LONG •

    $default  reduce using rule 31 (type_specifier)


State 11

   26 storage_class_specifier: REGISTER •

    $default  reduce using rule 26 (storage_class_specifier)


State 12

   55 type_qualifier: RESTRICT •

    $default  reduce using rule 55 (type_qualifier)


State 13

   29 type_specifier: SHORT •

    $default  reduce using rule 29 (type_specifier)


State 14

   34 type_specifier: SIGNED •

    $default  reduce using rule 34 (type_specifier)


State 15

   24 storage_class_specifier: STATIC •

    $default  reduce using rule 24 (storage_class_specifier)


State 16

   35 type_specifier: UNSIGNED •

    $default  reduce using rule 35 (type_specifier)


State 17

   27 type_specifier: VOID •

    $default  reduce using rule 27 (type_specifier)


State 18

   56 type_qualifier: VOLATILE •

    $default  reduce using rule 56 (type_qualifier)


State 19

   36 type_specifier: BOOL •

    $default  reduce using rule 36 (type_specifier)


State 20

   37 type_specifier: COMPLEX •

    $default  reduce using rule 37 (type_specifier)


State 21

   38 type_specifier: IMAGINARY •

    $default  reduce using rule 38 (type_specifier)


State 22

    0 $accept: translation_unit • $end
    2 translation_unit: translation_unit • external_declaration

    $end       shift, and go to state 34
    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    external_declaration     go to state 35
    function_definition      go to state 24
    declaration              go to state 25
    declaration_specifiers   go to state 26
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 23

    1 translation_unit: external_declaration •

    $default  reduce using rule 1 (translation_unit)


State 24

    3 external_declaration: function_definition •

    $default  reduce using rule 3 (external_declaration)


State 25

    4 external_declaration: declaration •

    $default  reduce using rule 4 (external_declaration)


State 26

    5 function_definition: declaration_specifiers • declarator declaration_list compound_statement
    6                    | declaration_specifiers • declarator compound_statement
    9 declaration: declaration_specifiers • init_declarator_list ';'
   10            | declaration_specifiers • ';'

    IDENTIFIER  shift, and go to state 36
    ';'         shift, and go to state 37
    '('         shift, and go to state 38
    '*'         shift, and go to state 39

    init_declarator_list  go to state 40
    init_declarator       go to state 41
    declarator            go to state 42
    direct_declarator     go to state 43
    pointer               go to state 44


State 27

   11 declaration_specifiers: storage_class_specifier • declaration_specifiers
   12                       | storage_class_specifier •

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 12 (declaration_specifiers)

    declaration_specifiers   go to state 45
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 28

   13 declaration_specifiers: type_specifier • declaration_specifiers
   14                       | type_specifier •

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 14 (declaration_specifiers)

    declaration_specifiers   go to state 46
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 29

   39 type_specifier: enum_specifier •

    $default  reduce using rule 39 (type_specifier)


State 30

   15 declaration_specifiers: type_qualifier • declaration_specifiers
   16                       | type_qualifier •

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 16 (declaration_specifiers)

    declaration_specifiers   go to state 47
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 31

   17 declaration_specifiers: function_specifier • declaration_specifiers
   18                       | function_specifier •

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 18 (declaration_specifiers)

    declaration_specifiers   go to state 48
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 32

   44 enum_specifier: ENUM IDENTIFIER • '{' enumerator_list '}'
   46               | ENUM IDENTIFIER • '{' enumerator_list ',' '}'
   48               | ENUM IDENTIFIER •

    '{'  shift, and go to state 49

    $default  reduce using rule 48 (enum_specifier)


State 33

   45 enum_specifier: ENUM '{' • enumerator_list '}'
   47               | ENUM '{' • enumerator_list ',' '}'

    IDENTIFIER  shift, and go to state 50

    enumerator_list       go to state 51
    enumerator            go to state 52
    enumeration_constant  go to state 53


State 34

    0 $accept: translation_unit $end •

    $default  accept


State 35

    2 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 2 (translation_unit)


State 36

   60 direct_declarator: IDENTIFIER •

    $default  reduce using rule 60 (direct_declarator)


State 37

   10 declaration: declaration_specifiers ';' •

    $default  reduce using rule 10 (declaration)


State 38

   61 direct_declarator: '(' • declarator ')'

    IDENTIFIER  shift, and go to state 36
    '('         shift, and go to state 38
    '*'         shift, and go to state 39

    declarator         go to state 54
    direct_declarator  go to state 43
    pointer            go to state 44


State 39

   75 pointer: '*' • type_qualifier_list
   76        | '*' •
   77        | '*' • type_qualifier_list pointer
   78        | '*' • pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18
    '*'       shift, and go to state 39

    $default  reduce using rule 76 (pointer)

    type_qualifier       go to state 55
    pointer              go to state 56
    type_qualifier_list  go to state 57


State 40

    9 declaration: declaration_specifiers init_declarator_list • ';'
   20 init_declarator_list: init_declarator_list • ',' init_declarator

    ';'  shift, and go to state 58
    ','  shift, and go to state 59


State 41

   19 init_declarator_list: init_declarator •

    $default  reduce using rule 19 (init_declarator_list)


State 42

    5 function_definition: declaration_specifiers declarator • declaration_list compound_statement
    6                    | declaration_specifiers declarator • compound_statement
   21 init_declarator: declarator •
   22                | declarator • '=' initializer

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    '='        shift, and go to state 60
    '{'        shift, and go to state 61

    $default  reduce using rule 21 (init_declarator)

    declaration_list         go to state 62
    declaration              go to state 63
    declaration_specifiers   go to state 64
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    compound_statement       go to state 65


State 43

   59 declarator: direct_declarator •
   62 direct_declarator: direct_declarator • '[' type_qualifier_list assignment_expression ']'
   63                  | direct_declarator • '[' type_qualifier_list ']'
   64                  | direct_declarator • '[' assignment_expression ']'
   65                  | direct_declarator • '[' ']'
   66                  | direct_declarator • '[' STATIC type_qualifier_list assignment_expression ']'
   67                  | direct_declarator • '[' STATIC assignment_expression ']'
   68                  | direct_declarator • '[' type_qualifier_list STATIC assignment_expression ']'
   69                  | direct_declarator • '[' type_qualifier_list '*' ']'
   70                  | direct_declarator • '[' '*' ']'
   71                  | direct_declarator • push_sym '(' parameter_type_list ')'
   72                  | direct_declarator • push_sym '(' identifier_list ')'
   73                  | direct_declarator • push_sym '(' ')'

    '['  shift, and go to state 66

    '('       reduce using rule 74 (push_sym)
    $default  reduce using rule 59 (declarator)

    push_sym  go to state 67


State 44

   58 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 36
    '('         shift, and go to state 38

    direct_declarator  go to state 68


State 45

   11 declaration_specifiers: storage_class_specifier declaration_specifiers •

    $default  reduce using rule 11 (declaration_specifiers)


State 46

   13 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 13 (declaration_specifiers)


State 47

   15 declaration_specifiers: type_qualifier declaration_specifiers •

    $default  reduce using rule 15 (declaration_specifiers)


State 48

   17 declaration_specifiers: function_specifier declaration_specifiers •

    $default  reduce using rule 17 (declaration_specifiers)


State 49

   44 enum_specifier: ENUM IDENTIFIER '{' • enumerator_list '}'
   46               | ENUM IDENTIFIER '{' • enumerator_list ',' '}'

    IDENTIFIER  shift, and go to state 50

    enumerator_list       go to state 69
    enumerator            go to state 52
    enumeration_constant  go to state 53


State 50

   53 enumeration_constant: IDENTIFIER •

    $default  reduce using rule 53 (enumeration_constant)


State 51

   45 enum_specifier: ENUM '{' enumerator_list • '}'
   47               | ENUM '{' enumerator_list • ',' '}'
   50 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 70
    '}'  shift, and go to state 71


State 52

   49 enumerator_list: enumerator •

    $default  reduce using rule 49 (enumerator_list)


State 53

   51 enumerator: enumeration_constant •
   52           | enumeration_constant • '=' constant_expression

    '='  shift, and go to state 72

    $default  reduce using rule 51 (enumerator)


State 54

   61 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 73


State 55

   79 type_qualifier_list: type_qualifier •

    $default  reduce using rule 79 (type_qualifier_list)


State 56

   78 pointer: '*' pointer •

    $default  reduce using rule 78 (pointer)


State 57

   75 pointer: '*' type_qualifier_list •
   77        | '*' type_qualifier_list • pointer
   80 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18
    '*'       shift, and go to state 39

    $default  reduce using rule 75 (pointer)

    type_qualifier  go to state 74
    pointer         go to state 75


State 58

    9 declaration: declaration_specifiers init_declarator_list ';' •

    $default  reduce using rule 9 (declaration)


State 59

   20 init_declarator_list: init_declarator_list ',' • init_declarator

    IDENTIFIER  shift, and go to state 36
    '('         shift, and go to state 38
    '*'         shift, and go to state 39

    init_declarator    go to state 76
    declarator         go to state 77
    direct_declarator  go to state 43
    pointer            go to state 44


State 60

   22 init_declarator: declarator '=' • initializer

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '{'             shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    initializer                   go to state 92
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 118


State 61

  111 compound_statement: '{' • block_item_list '}'
  112                   | '{' • '}'

    AUTO            shift, and go to state 1
    BREAK           shift, and go to state 119
    CASE            shift, and go to state 120
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    CONTINUE        shift, and go to state 121
    DEFAULT         shift, and go to state 122
    DO              shift, and go to state 123
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    FLOAT           shift, and go to state 7
    FOR             shift, and go to state 124
    GOTO            shift, and go to state 125
    IF              shift, and go to state 126
    INLINE          shift, and go to state 8
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    REGISTER        shift, and go to state 11
    RESTRICT        shift, and go to state 12
    RETURN          shift, and go to state 127
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 78
    STATIC          shift, and go to state 15
    SWITCH          shift, and go to state 128
    UNSIGNED        shift, and go to state 16
    VOID            shift, and go to state 17
    VOLATILE        shift, and go to state 18
    WHILE           shift, and go to state 129
    BOOL            shift, and go to state 19
    COMPLEX         shift, and go to state 20
    IMAGINARY       shift, and go to state 21
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 130
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    ';'             shift, and go to state 131
    '{'             shift, and go to state 61
    '}'             shift, and go to state 132
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    declaration                   go to state 133
    declaration_specifiers        go to state 64
    storage_class_specifier       go to state 27
    type_specifier                go to state 28
    enum_specifier                go to state 29
    type_qualifier                go to state 30
    function_specifier            go to state 31
    statement                     go to state 134
    labeled_statement             go to state 135
    compound_statement            go to state 136
    block_item_list               go to state 137
    block_item                    go to state 138
    expression_statement          go to state 139
    selection_statement           go to state 140
    iteration_statement           go to state 141
    jump_statement                go to state 142
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 144


State 62

    5 function_definition: declaration_specifiers declarator declaration_list • compound_statement
    8 declaration_list: declaration_list • declaration

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    '{'        shift, and go to state 61

    declaration              go to state 145
    declaration_specifiers   go to state 64
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    compound_statement       go to state 146


State 63

    7 declaration_list: declaration •

    $default  reduce using rule 7 (declaration_list)


State 64

    9 declaration: declaration_specifiers • init_declarator_list ';'
   10            | declaration_specifiers • ';'

    IDENTIFIER  shift, and go to state 36
    ';'         shift, and go to state 37
    '('         shift, and go to state 38
    '*'         shift, and go to state 39

    init_declarator_list  go to state 40
    init_declarator       go to state 41
    declarator            go to state 77
    direct_declarator     go to state 43
    pointer               go to state 44


State 65

    6 function_definition: declaration_specifiers declarator compound_statement •

    $default  reduce using rule 6 (function_definition)


State 66

   62 direct_declarator: direct_declarator '[' • type_qualifier_list assignment_expression ']'
   63                  | direct_declarator '[' • type_qualifier_list ']'
   64                  | direct_declarator '[' • assignment_expression ']'
   65                  | direct_declarator '[' • ']'
   66                  | direct_declarator '[' • STATIC type_qualifier_list assignment_expression ']'
   67                  | direct_declarator '[' • STATIC assignment_expression ']'
   68                  | direct_declarator '[' • type_qualifier_list STATIC assignment_expression ']'
   69                  | direct_declarator '[' • type_qualifier_list '*' ']'
   70                  | direct_declarator '[' • '*' ']'

    CONST           shift, and go to state 3
    RESTRICT        shift, and go to state 12
    SIZEOF          shift, and go to state 78
    STATIC          shift, and go to state 147
    VOLATILE        shift, and go to state 18
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    ']'             shift, and go to state 148
    '*'             shift, and go to state 149
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    type_qualifier                go to state 55
    type_qualifier_list           go to state 150
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 151


State 67

   71 direct_declarator: direct_declarator push_sym • '(' parameter_type_list ')'
   72                  | direct_declarator push_sym • '(' identifier_list ')'
   73                  | direct_declarator push_sym • '(' ')'

    '('  shift, and go to state 152


State 68

   58 declarator: pointer direct_declarator •
   62 direct_declarator: direct_declarator • '[' type_qualifier_list assignment_expression ']'
   63                  | direct_declarator • '[' type_qualifier_list ']'
   64                  | direct_declarator • '[' assignment_expression ']'
   65                  | direct_declarator • '[' ']'
   66                  | direct_declarator • '[' STATIC type_qualifier_list assignment_expression ']'
   67                  | direct_declarator • '[' STATIC assignment_expression ']'
   68                  | direct_declarator • '[' type_qualifier_list STATIC assignment_expression ']'
   69                  | direct_declarator • '[' type_qualifier_list '*' ']'
   70                  | direct_declarator • '[' '*' ']'
   71                  | direct_declarator • push_sym '(' parameter_type_list ')'
   72                  | direct_declarator • push_sym '(' identifier_list ')'
   73                  | direct_declarator • push_sym '(' ')'

    '['  shift, and go to state 66

    '('       reduce using rule 74 (push_sym)
    $default  reduce using rule 58 (declarator)

    push_sym  go to state 67


State 69

   44 enum_specifier: ENUM IDENTIFIER '{' enumerator_list • '}'
   46               | ENUM IDENTIFIER '{' enumerator_list • ',' '}'
   50 enumerator_list: enumerator_list • ',' enumerator

    ','  shift, and go to state 153
    '}'  shift, and go to state 154


State 70

   47 enum_specifier: ENUM '{' enumerator_list ',' • '}'
   50 enumerator_list: enumerator_list ',' • enumerator

    IDENTIFIER  shift, and go to state 50
    '}'         shift, and go to state 155

    enumerator            go to state 156
    enumeration_constant  go to state 53


State 71

   45 enum_specifier: ENUM '{' enumerator_list '}' •

    $default  reduce using rule 45 (enum_specifier)


State 72

   52 enumerator: enumeration_constant '=' • constant_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 158
    constant_expression           go to state 159


State 73

   61 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 61 (direct_declarator)


State 74

   80 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 80 (type_qualifier_list)


State 75

   77 pointer: '*' type_qualifier_list pointer •

    $default  reduce using rule 77 (pointer)


State 76

   20 init_declarator_list: init_declarator_list ',' init_declarator •

    $default  reduce using rule 20 (init_declarator_list)


State 77

   21 init_declarator: declarator •
   22                | declarator • '=' initializer

    '='  shift, and go to state 60

    $default  reduce using rule 21 (init_declarator)


State 78

  160 unary_expression: SIZEOF • unary_expression
  161                 | SIZEOF • '(' type_name ')'

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 160
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 161


State 79

  152 unary_expression: INC • unary_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 162
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 163


State 80

  153 unary_expression: DEC • unary_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 162
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 164


State 81

  135 primary_expression: IDENTIFIER •

    $default  reduce using rule 135 (primary_expression)


State 82

  136 primary_expression: CONSTANT •

    $default  reduce using rule 136 (primary_expression)


State 83

  137 primary_expression: STRING_LITERAL •

    $default  reduce using rule 137 (primary_expression)


State 84

   91 initializer: '{' • initializer_list '}'
   92            | '{' • initializer_list ',' '}'

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '{'             shift, and go to state 84
    '('             shift, and go to state 85
    '['             shift, and go to state 165
    '*'             shift, and go to state 86
    '.'             shift, and go to state 166
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    initializer                   go to state 167
    initializer_list              go to state 168
    designation                   go to state 169
    designator_list               go to state 170
    designator                    go to state 171
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 118


State 85

  138 primary_expression: '(' • expression ')'
  147 postfix_expression: '(' • type_name ')' '{' initializer_list '}'
  148                   | '(' • type_name ')' '{' initializer_list ',' '}'
  163 cast_expression: '(' • type_name ')' cast_expression

    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    FLOAT           shift, and go to state 7
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    RESTRICT        shift, and go to state 12
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 78
    UNSIGNED        shift, and go to state 16
    VOID            shift, and go to state 17
    VOLATILE        shift, and go to state 18
    BOOL            shift, and go to state 19
    COMPLEX         shift, and go to state 20
    IMAGINARY       shift, and go to state 21
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    type_specifier                go to state 172
    specifier_qualifier_list      go to state 173
    enum_specifier                go to state 29
    type_qualifier                go to state 174
    type_name                     go to state 175
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 176


State 86

  155 unary_expression: '*' • cast_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 157
    cast_expression     go to state 177


State 87

  154 unary_expression: '&' • unary_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 162
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 178


State 88

  156 unary_expression: '+' • cast_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 157
    cast_expression     go to state 179


State 89

  157 unary_expression: '-' • cast_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 157
    cast_expression     go to state 180


State 90

  158 unary_expression: '~' • cast_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 157
    cast_expression     go to state 181


State 91

  159 unary_expression: '!' • cast_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 157
    cast_expression     go to state 182


State 92

   22 init_declarator: declarator '=' initializer •

    $default  reduce using rule 22 (init_declarator)


State 93

  139 postfix_expression: primary_expression •

    $default  reduce using rule 139 (postfix_expression)


State 94

  140 postfix_expression: postfix_expression • '[' expression ']'
  141                   | postfix_expression • '(' argument_expression_list ')'
  142                   | postfix_expression • '(' ')'
  143                   | postfix_expression • '.' IDENTIFIER
  144                   | postfix_expression • ACC IDENTIFIER
  145                   | postfix_expression • INC
  146                   | postfix_expression • DEC
  151 unary_expression: postfix_expression •

    ACC  shift, and go to state 183
    INC  shift, and go to state 184
    DEC  shift, and go to state 185
    '('  shift, and go to state 186
    '['  shift, and go to state 187
    '.'  shift, and go to state 188

    $default  reduce using rule 151 (unary_expression)


State 95

  162 cast_expression: unary_expression •
  207 assignment_expression: unary_expression • assignment_operator assignment_expression

    AssSTAR    shift, and go to state 189
    AssDIV     shift, and go to state 190
    AssMOD     shift, and go to state 191
    AssPLUS    shift, and go to state 192
    AssMINUS   shift, and go to state 193
    AssSHL     shift, and go to state 194
    AssSHR     shift, and go to state 195
    AssBinAND  shift, and go to state 196
    AssXOR     shift, and go to state 197
    AssBinOR   shift, and go to state 198
    '='        shift, and go to state 199

    $default  reduce using rule 162 (cast_expression)

    assignment_operator  go to state 200


State 96

  165 multiplicative_expression: cast_expression •

    $default  reduce using rule 165 (multiplicative_expression)


State 97

  169 nb_multiplicative_expression: multiplicative_expression •
  170 additive_expression: multiplicative_expression •

    '*'       reduce using rule 169 (nb_multiplicative_expression)
    '/'       reduce using rule 169 (nb_multiplicative_expression)
    '%'       reduce using rule 169 (nb_multiplicative_expression)
    $default  reduce using rule 170 (additive_expression)


State 98

  166 multiplicative_expression: nb_multiplicative_expression • '*' nb_cast_expression
  167                          | nb_multiplicative_expression • '/' nb_cast_expression
  168                          | nb_multiplicative_expression • '%' nb_cast_expression

    '*'  shift, and go to state 201
    '/'  shift, and go to state 202
    '%'  shift, and go to state 203


State 99

  173 nb_additive_expression: additive_expression •
  174 shift_expression: additive_expression •

    '+'       reduce using rule 173 (nb_additive_expression)
    '-'       reduce using rule 173 (nb_additive_expression)
    $default  reduce using rule 174 (shift_expression)


State 100

  171 additive_expression: nb_additive_expression • '+' nb_multiplicative_expression
  172                    | nb_additive_expression • '-' nb_multiplicative_expression

    '+'  shift, and go to state 204
    '-'  shift, and go to state 205


State 101

  177 nb_shift_expression: shift_expression •
  178 relational_expression: shift_expression •

    SHL       reduce using rule 177 (nb_shift_expression)
    SHR       reduce using rule 177 (nb_shift_expression)
    $default  reduce using rule 178 (relational_expression)


State 102

  175 shift_expression: nb_shift_expression • SHL nb_additive_expression
  176                 | nb_shift_expression • SHR nb_additive_expression

    SHL  shift, and go to state 206
    SHR  shift, and go to state 207


State 103

  183 nb_relational_expression: relational_expression •
  184 equality_expression: relational_expression •

    LTE       reduce using rule 183 (nb_relational_expression)
    GTE       reduce using rule 183 (nb_relational_expression)
    '<'       reduce using rule 183 (nb_relational_expression)
    '>'       reduce using rule 183 (nb_relational_expression)
    $default  reduce using rule 184 (equality_expression)


State 104

  179 relational_expression: nb_relational_expression • '<' nb_shift_expression
  180                      | nb_relational_expression • '>' nb_shift_expression
  181                      | nb_relational_expression • LTE nb_shift_expression
  182                      | nb_relational_expression • GTE nb_shift_expression

    LTE  shift, and go to state 208
    GTE  shift, and go to state 209
    '<'  shift, and go to state 210
    '>'  shift, and go to state 211


State 105

  187 nb_equality_expression: equality_expression •
  188 and_expression: equality_expression •

    EQUAL     reduce using rule 187 (nb_equality_expression)
    NEQUAL    reduce using rule 187 (nb_equality_expression)
    $default  reduce using rule 188 (and_expression)


State 106

  185 equality_expression: nb_equality_expression • EQUAL nb_relational_expression
  186                    | nb_equality_expression • NEQUAL nb_relational_expression

    EQUAL   shift, and go to state 212
    NEQUAL  shift, and go to state 213


State 107

  190 nb_and_expression: and_expression •
  191 exclusive_or_expression: and_expression •

    '&'       reduce using rule 190 (nb_and_expression)
    $default  reduce using rule 191 (exclusive_or_expression)


State 108

  189 and_expression: nb_and_expression • '&' nb_equality_expression

    '&'  shift, and go to state 214


State 109

  193 nb_exclusive_or_expression: exclusive_or_expression •
  194 inclusive_or_expression: exclusive_or_expression •

    '^'       reduce using rule 193 (nb_exclusive_or_expression)
    $default  reduce using rule 194 (inclusive_or_expression)


State 110

  192 exclusive_or_expression: nb_exclusive_or_expression • '^' nb_and_expression

    '^'  shift, and go to state 215


State 111

  196 nb_inclusive_or_expression: inclusive_or_expression •
  197 logical_and_expression: inclusive_or_expression •

    '|'       reduce using rule 196 (nb_inclusive_or_expression)
    $default  reduce using rule 197 (logical_and_expression)


State 112

  195 inclusive_or_expression: nb_inclusive_or_expression • '|' nb_exclusive_or_expression

    '|'  shift, and go to state 216


State 113

  199 logical_or_expression: logical_and_expression •
  203 bool_logical_and_expression: logical_and_expression •

    LogAND    reduce using rule 203 (bool_logical_and_expression)
    $default  reduce using rule 199 (logical_or_expression)


State 114

  202 bool_logical_or_expression: logical_or_expression •
  204 conditional_expression: logical_or_expression •

    LogOR     reduce using rule 202 (bool_logical_or_expression)
    '?'       reduce using rule 202 (bool_logical_or_expression)
    $default  reduce using rule 204 (conditional_expression)


State 115

  200 logical_or_expression: bool_logical_or_expression • LogOR address_nonterm bool_logical_and_expression
  205 conditional_expression: bool_logical_or_expression • '?' address_nonterm expression jump_nonterm ':' address_nonterm conditional_expression jump_nonterm

    LogOR  shift, and go to state 217
    '?'    shift, and go to state 218


State 116

  198 logical_and_expression: bool_logical_and_expression • LogAND address_nonterm bool_inclusive_or_expression

    LogAND  shift, and go to state 219


State 117

  206 assignment_expression: conditional_expression •

    $default  reduce using rule 206 (assignment_expression)


State 118

   90 initializer: assignment_expression •

    $default  reduce using rule 90 (initializer)


State 119

  133 jump_statement: BREAK • ';'

    ';'  shift, and go to state 220


State 120

  109 labeled_statement: CASE • constant_expression ':' statement

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 158
    constant_expression           go to state 221


State 121

  132 jump_statement: CONTINUE • ';'

    ';'  shift, and go to state 222


State 122

  110 labeled_statement: DEFAULT • ':' statement

    ':'  shift, and go to state 223


State 123

  123 iteration_statement: DO • address_nonterm statement address_nonterm WHILE '(' bool_expression ')' ';'

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 224


State 124

  124 iteration_statement: FOR • '(' temp ';' address_nonterm bool_temp ';' address_nonterm temp jump_nonterm ')' address_nonterm statement jump_nonterm
  125                    | FOR • '(' declaration ';' temp ';' temp ')' statement

    '('  shift, and go to state 225


State 125

  131 jump_statement: GOTO • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 226


State 126

  119 selection_statement: IF • '(' bool_expression ')' address_nonterm statement jump_nonterm ELSE address_nonterm statement
  120                    | IF • '(' bool_expression ')' address_nonterm statement jump_nonterm

    '('  shift, and go to state 227


State 127

  134 jump_statement: RETURN • temp ';'

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    $default  reduce using rule 127 (temp)

    temp                          go to state 228
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 229


State 128

  121 selection_statement: SWITCH • '(' expression ')' statement

    '('  shift, and go to state 230


State 129

  122 iteration_statement: WHILE • '(' address_nonterm bool_expression ')' address_nonterm statement jump_nonterm

    '('  shift, and go to state 231


State 130

  108 labeled_statement: IDENTIFIER • ':' statement
  135 primary_expression: IDENTIFIER •

    ':'  shift, and go to state 232

    $default  reduce using rule 135 (primary_expression)


State 131

  118 expression_statement: ';' •

    $default  reduce using rule 118 (expression_statement)


State 132

  112 compound_statement: '{' '}' •

    $default  reduce using rule 112 (compound_statement)


State 133

  115 block_item: declaration •

    $default  reduce using rule 115 (block_item)


State 134

  116 block_item: statement •

    $default  reduce using rule 116 (block_item)


State 135

  102 statement: labeled_statement •

    $default  reduce using rule 102 (statement)


State 136

  103 statement: compound_statement •

    $default  reduce using rule 103 (statement)


State 137

  111 compound_statement: '{' block_item_list • '}'
  114 block_item_list: block_item_list • address_nonterm block_item

    '}'  shift, and go to state 233

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 234


State 138

  113 block_item_list: block_item •

    $default  reduce using rule 113 (block_item_list)


State 139

  104 statement: expression_statement •

    $default  reduce using rule 104 (statement)


State 140

  105 statement: selection_statement •

    $default  reduce using rule 105 (statement)


State 141

  106 statement: iteration_statement •

    $default  reduce using rule 106 (statement)


State 142

  107 statement: jump_statement •

    $default  reduce using rule 107 (statement)


State 143

  219 expression: assignment_expression •

    $default  reduce using rule 219 (expression)


State 144

  117 expression_statement: expression • ';'
  220 expression: expression • ',' assignment_expression

    ';'  shift, and go to state 235
    ','  shift, and go to state 236


State 145

    8 declaration_list: declaration_list declaration •

    $default  reduce using rule 8 (declaration_list)


State 146

    5 function_definition: declaration_specifiers declarator declaration_list compound_statement •

    $default  reduce using rule 5 (function_definition)


State 147

   66 direct_declarator: direct_declarator '[' STATIC • type_qualifier_list assignment_expression ']'
   67                  | direct_declarator '[' STATIC • assignment_expression ']'

    CONST           shift, and go to state 3
    RESTRICT        shift, and go to state 12
    SIZEOF          shift, and go to state 78
    VOLATILE        shift, and go to state 18
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    type_qualifier                go to state 55
    type_qualifier_list           go to state 237
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 238


State 148

   65 direct_declarator: direct_declarator '[' ']' •

    $default  reduce using rule 65 (direct_declarator)


State 149

   70 direct_declarator: direct_declarator '[' '*' • ']'
  155 unary_expression: '*' • cast_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    ']'             shift, and go to state 239
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 157
    cast_expression     go to state 177


State 150

   62 direct_declarator: direct_declarator '[' type_qualifier_list • assignment_expression ']'
   63                  | direct_declarator '[' type_qualifier_list • ']'
   68                  | direct_declarator '[' type_qualifier_list • STATIC assignment_expression ']'
   69                  | direct_declarator '[' type_qualifier_list • '*' ']'
   80 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST           shift, and go to state 3
    RESTRICT        shift, and go to state 12
    SIZEOF          shift, and go to state 78
    STATIC          shift, and go to state 240
    VOLATILE        shift, and go to state 18
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    ']'             shift, and go to state 241
    '*'             shift, and go to state 242
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    type_qualifier                go to state 74
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 243


State 151

   64 direct_declarator: direct_declarator '[' assignment_expression • ']'

    ']'  shift, and go to state 244


State 152

   71 direct_declarator: direct_declarator push_sym '(' • parameter_type_list ')'
   72                  | direct_declarator push_sym '(' • identifier_list ')'
   73                  | direct_declarator push_sym '(' • ')'

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    BOOL        shift, and go to state 19
    COMPLEX     shift, and go to state 20
    IMAGINARY   shift, and go to state 21
    IDENTIFIER  shift, and go to state 245
    ')'         shift, and go to state 246

    declaration_specifiers   go to state 247
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    parameter_type_list      go to state 248
    parameter_list           go to state 249
    parameter_declaration    go to state 250
    identifier_list          go to state 251


State 153

   46 enum_specifier: ENUM IDENTIFIER '{' enumerator_list ',' • '}'
   50 enumerator_list: enumerator_list ',' • enumerator

    IDENTIFIER  shift, and go to state 50
    '}'         shift, and go to state 252

    enumerator            go to state 156
    enumeration_constant  go to state 53


State 154

   44 enum_specifier: ENUM IDENTIFIER '{' enumerator_list '}' •

    $default  reduce using rule 44 (enum_specifier)


State 155

   47 enum_specifier: ENUM '{' enumerator_list ',' '}' •

    $default  reduce using rule 47 (enum_specifier)


State 156

   50 enumerator_list: enumerator_list ',' enumerator •

    $default  reduce using rule 50 (enumerator_list)


State 157

  162 cast_expression: unary_expression •

    $default  reduce using rule 162 (cast_expression)


State 158

  221 constant_expression: conditional_expression •

    $default  reduce using rule 221 (constant_expression)


State 159

   52 enumerator: enumeration_constant '=' constant_expression •

    $default  reduce using rule 52 (enumerator)


State 160

  138 primary_expression: '(' • expression ')'
  147 postfix_expression: '(' • type_name ')' '{' initializer_list '}'
  148                   | '(' • type_name ')' '{' initializer_list ',' '}'
  161 unary_expression: SIZEOF '(' • type_name ')'

    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    FLOAT           shift, and go to state 7
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    RESTRICT        shift, and go to state 12
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 78
    UNSIGNED        shift, and go to state 16
    VOID            shift, and go to state 17
    VOLATILE        shift, and go to state 18
    BOOL            shift, and go to state 19
    COMPLEX         shift, and go to state 20
    IMAGINARY       shift, and go to state 21
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    type_specifier                go to state 172
    specifier_qualifier_list      go to state 173
    enum_specifier                go to state 29
    type_qualifier                go to state 174
    type_name                     go to state 253
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 176


State 161

  160 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 160 (unary_expression)


State 162

  138 primary_expression: '(' • expression ')'
  147 postfix_expression: '(' • type_name ')' '{' initializer_list '}'
  148                   | '(' • type_name ')' '{' initializer_list ',' '}'

    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    FLOAT           shift, and go to state 7
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    RESTRICT        shift, and go to state 12
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 78
    UNSIGNED        shift, and go to state 16
    VOID            shift, and go to state 17
    VOLATILE        shift, and go to state 18
    BOOL            shift, and go to state 19
    COMPLEX         shift, and go to state 20
    IMAGINARY       shift, and go to state 21
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    type_specifier                go to state 172
    specifier_qualifier_list      go to state 173
    enum_specifier                go to state 29
    type_qualifier                go to state 174
    type_name                     go to state 254
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 176


State 163

  152 unary_expression: INC unary_expression •

    $default  reduce using rule 152 (unary_expression)


State 164

  153 unary_expression: DEC unary_expression •

    $default  reduce using rule 153 (unary_expression)


State 165

  100 designator: '[' • constant_expression ']'

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 158
    constant_expression           go to state 255


State 166

  101 designator: '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 256


State 167

   94 initializer_list: initializer •

    $default  reduce using rule 94 (initializer_list)


State 168

   91 initializer: '{' initializer_list • '}'
   92            | '{' initializer_list • ',' '}'
   95 initializer_list: initializer_list • ',' designation initializer
   96                 | initializer_list • ',' initializer

    ','  shift, and go to state 257
    '}'  shift, and go to state 258


State 169

   93 initializer_list: designation • initializer

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '{'             shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    initializer                   go to state 259
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 118


State 170

   97 designation: designator_list • '='
   99 designator_list: designator_list • designator

    '='  shift, and go to state 260
    '['  shift, and go to state 165
    '.'  shift, and go to state 166

    designator  go to state 261


State 171

   98 designator_list: designator •

    $default  reduce using rule 98 (designator_list)


State 172

   40 specifier_qualifier_list: type_specifier • specifier_qualifier_list
   41                         | type_specifier •

    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 41 (specifier_qualifier_list)

    type_specifier            go to state 172
    specifier_qualifier_list  go to state 262
    enum_specifier            go to state 29
    type_qualifier            go to state 174


State 173

   89 type_name: specifier_qualifier_list •

    $default  reduce using rule 89 (type_name)


State 174

   42 specifier_qualifier_list: type_qualifier • specifier_qualifier_list
   43                         | type_qualifier •

    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 43 (specifier_qualifier_list)

    type_specifier            go to state 172
    specifier_qualifier_list  go to state 263
    enum_specifier            go to state 29
    type_qualifier            go to state 174


State 175

  147 postfix_expression: '(' type_name • ')' '{' initializer_list '}'
  148                   | '(' type_name • ')' '{' initializer_list ',' '}'
  163 cast_expression: '(' type_name • ')' cast_expression

    ')'  shift, and go to state 264


State 176

  138 primary_expression: '(' expression • ')'
  220 expression: expression • ',' assignment_expression

    ','  shift, and go to state 236
    ')'  shift, and go to state 265


State 177

  155 unary_expression: '*' cast_expression •

    $default  reduce using rule 155 (unary_expression)


State 178

  154 unary_expression: '&' unary_expression •

    $default  reduce using rule 154 (unary_expression)


State 179

  156 unary_expression: '+' cast_expression •

    $default  reduce using rule 156 (unary_expression)


State 180

  157 unary_expression: '-' cast_expression •

    $default  reduce using rule 157 (unary_expression)


State 181

  158 unary_expression: '~' cast_expression •

    $default  reduce using rule 158 (unary_expression)


State 182

  159 unary_expression: '!' cast_expression •

    $default  reduce using rule 159 (unary_expression)


State 183

  144 postfix_expression: postfix_expression ACC • IDENTIFIER

    IDENTIFIER  shift, and go to state 266


State 184

  145 postfix_expression: postfix_expression INC •

    $default  reduce using rule 145 (postfix_expression)


State 185

  146 postfix_expression: postfix_expression DEC •

    $default  reduce using rule 146 (postfix_expression)


State 186

  141 postfix_expression: postfix_expression '(' • argument_expression_list ')'
  142                   | postfix_expression '(' • ')'

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    ')'             shift, and go to state 267
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    argument_expression_list      go to state 268
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 269


State 187

  140 postfix_expression: postfix_expression '[' • expression ']'

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 270


State 188

  143 postfix_expression: postfix_expression '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 271


State 189

  209 assignment_operator: AssSTAR •

    $default  reduce using rule 209 (assignment_operator)


State 190

  210 assignment_operator: AssDIV •

    $default  reduce using rule 210 (assignment_operator)


State 191

  211 assignment_operator: AssMOD •

    $default  reduce using rule 211 (assignment_operator)


State 192

  212 assignment_operator: AssPLUS •

    $default  reduce using rule 212 (assignment_operator)


State 193

  213 assignment_operator: AssMINUS •

    $default  reduce using rule 213 (assignment_operator)


State 194

  214 assignment_operator: AssSHL •

    $default  reduce using rule 214 (assignment_operator)


State 195

  215 assignment_operator: AssSHR •

    $default  reduce using rule 215 (assignment_operator)


State 196

  216 assignment_operator: AssBinAND •

    $default  reduce using rule 216 (assignment_operator)


State 197

  217 assignment_operator: AssXOR •

    $default  reduce using rule 217 (assignment_operator)


State 198

  218 assignment_operator: AssBinOR •

    $default  reduce using rule 218 (assignment_operator)


State 199

  208 assignment_operator: '=' •

    $default  reduce using rule 208 (assignment_operator)


State 200

  207 assignment_expression: unary_expression assignment_operator • assignment_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 272


State 201

  166 multiplicative_expression: nb_multiplicative_expression '*' • nb_cast_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 157
    cast_expression     go to state 273
    nb_cast_expression  go to state 274


State 202

  167 multiplicative_expression: nb_multiplicative_expression '/' • nb_cast_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 157
    cast_expression     go to state 273
    nb_cast_expression  go to state 275


State 203

  168 multiplicative_expression: nb_multiplicative_expression '%' • nb_cast_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 157
    cast_expression     go to state 273
    nb_cast_expression  go to state 276


State 204

  171 additive_expression: nb_additive_expression '+' • nb_multiplicative_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 277
    nb_multiplicative_expression  go to state 278


State 205

  172 additive_expression: nb_additive_expression '-' • nb_multiplicative_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 277
    nb_multiplicative_expression  go to state 279


State 206

  175 shift_expression: nb_shift_expression SHL • nb_additive_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 280
    nb_additive_expression        go to state 281


State 207

  176 shift_expression: nb_shift_expression SHR • nb_additive_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 280
    nb_additive_expression        go to state 282


State 208

  181 relational_expression: nb_relational_expression LTE • nb_shift_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 283
    nb_shift_expression           go to state 284


State 209

  182 relational_expression: nb_relational_expression GTE • nb_shift_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 283
    nb_shift_expression           go to state 285


State 210

  179 relational_expression: nb_relational_expression '<' • nb_shift_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 283
    nb_shift_expression           go to state 286


State 211

  180 relational_expression: nb_relational_expression '>' • nb_shift_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 283
    nb_shift_expression           go to state 287


State 212

  185 equality_expression: nb_equality_expression EQUAL • nb_relational_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 288
    nb_relational_expression      go to state 289


State 213

  186 equality_expression: nb_equality_expression NEQUAL • nb_relational_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 288
    nb_relational_expression      go to state 290


State 214

  189 and_expression: nb_and_expression '&' • nb_equality_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 291
    nb_equality_expression        go to state 292


State 215

  192 exclusive_or_expression: nb_exclusive_or_expression '^' • nb_and_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 293
    nb_and_expression             go to state 294


State 216

  195 inclusive_or_expression: nb_inclusive_or_expression '|' • nb_exclusive_or_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 295
    nb_exclusive_or_expression    go to state 296


State 217

  200 logical_or_expression: bool_logical_or_expression LogOR • address_nonterm bool_logical_and_expression

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 297


State 218

  205 conditional_expression: bool_logical_or_expression '?' • address_nonterm expression jump_nonterm ':' address_nonterm conditional_expression jump_nonterm

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 298


State 219

  198 logical_and_expression: bool_logical_and_expression LogAND • address_nonterm bool_inclusive_or_expression

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 299


State 220

  133 jump_statement: BREAK ';' •

    $default  reduce using rule 133 (jump_statement)


State 221

  109 labeled_statement: CASE constant_expression • ':' statement

    ':'  shift, and go to state 300


State 222

  132 jump_statement: CONTINUE ';' •

    $default  reduce using rule 132 (jump_statement)


State 223

  110 labeled_statement: DEFAULT ':' • statement

    BREAK           shift, and go to state 119
    CASE            shift, and go to state 120
    CONTINUE        shift, and go to state 121
    DEFAULT         shift, and go to state 122
    DO              shift, and go to state 123
    FOR             shift, and go to state 124
    GOTO            shift, and go to state 125
    IF              shift, and go to state 126
    RETURN          shift, and go to state 127
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 128
    WHILE           shift, and go to state 129
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 130
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    ';'             shift, and go to state 131
    '{'             shift, and go to state 61
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    statement                     go to state 301
    labeled_statement             go to state 135
    compound_statement            go to state 136
    expression_statement          go to state 139
    selection_statement           go to state 140
    iteration_statement           go to state 141
    jump_statement                go to state 142
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 144


State 224

  123 iteration_statement: DO address_nonterm • statement address_nonterm WHILE '(' bool_expression ')' ';'

    BREAK           shift, and go to state 119
    CASE            shift, and go to state 120
    CONTINUE        shift, and go to state 121
    DEFAULT         shift, and go to state 122
    DO              shift, and go to state 123
    FOR             shift, and go to state 124
    GOTO            shift, and go to state 125
    IF              shift, and go to state 126
    RETURN          shift, and go to state 127
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 128
    WHILE           shift, and go to state 129
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 130
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    ';'             shift, and go to state 131
    '{'             shift, and go to state 61
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    statement                     go to state 302
    labeled_statement             go to state 135
    compound_statement            go to state 136
    expression_statement          go to state 139
    selection_statement           go to state 140
    iteration_statement           go to state 141
    jump_statement                go to state 142
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 144


State 225

  124 iteration_statement: FOR '(' • temp ';' address_nonterm bool_temp ';' address_nonterm temp jump_nonterm ')' address_nonterm statement jump_nonterm
  125                    | FOR '(' • declaration ';' temp ';' temp ')' statement

    AUTO            shift, and go to state 1
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    FLOAT           shift, and go to state 7
    INLINE          shift, and go to state 8
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    REGISTER        shift, and go to state 11
    RESTRICT        shift, and go to state 12
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 78
    STATIC          shift, and go to state 15
    UNSIGNED        shift, and go to state 16
    VOID            shift, and go to state 17
    VOLATILE        shift, and go to state 18
    BOOL            shift, and go to state 19
    COMPLEX         shift, and go to state 20
    IMAGINARY       shift, and go to state 21
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    $default  reduce using rule 127 (temp)

    declaration                   go to state 303
    declaration_specifiers        go to state 64
    storage_class_specifier       go to state 27
    type_specifier                go to state 28
    enum_specifier                go to state 29
    type_qualifier                go to state 30
    function_specifier            go to state 31
    temp                          go to state 304
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 229


State 226

  131 jump_statement: GOTO IDENTIFIER • ';'

    ';'  shift, and go to state 305


State 227

  119 selection_statement: IF '(' • bool_expression ')' address_nonterm statement jump_nonterm ELSE address_nonterm statement
  120                    | IF '(' • bool_expression ')' address_nonterm statement jump_nonterm

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    bool_expression               go to state 306
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 307


State 228

  134 jump_statement: RETURN temp • ';'

    ';'  shift, and go to state 308


State 229

  126 temp: expression •
  220 expression: expression • ',' assignment_expression

    ','  shift, and go to state 236

    $default  reduce using rule 126 (temp)


State 230

  121 selection_statement: SWITCH '(' • expression ')' statement

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 309


State 231

  122 iteration_statement: WHILE '(' • address_nonterm bool_expression ')' address_nonterm statement jump_nonterm

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 310


State 232

  108 labeled_statement: IDENTIFIER ':' • statement

    BREAK           shift, and go to state 119
    CASE            shift, and go to state 120
    CONTINUE        shift, and go to state 121
    DEFAULT         shift, and go to state 122
    DO              shift, and go to state 123
    FOR             shift, and go to state 124
    GOTO            shift, and go to state 125
    IF              shift, and go to state 126
    RETURN          shift, and go to state 127
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 128
    WHILE           shift, and go to state 129
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 130
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    ';'             shift, and go to state 131
    '{'             shift, and go to state 61
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    statement                     go to state 311
    labeled_statement             go to state 135
    compound_statement            go to state 136
    expression_statement          go to state 139
    selection_statement           go to state 140
    iteration_statement           go to state 141
    jump_statement                go to state 142
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 144


State 233

  111 compound_statement: '{' block_item_list '}' •

    $default  reduce using rule 111 (compound_statement)


State 234

  114 block_item_list: block_item_list address_nonterm • block_item

    AUTO            shift, and go to state 1
    BREAK           shift, and go to state 119
    CASE            shift, and go to state 120
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    CONTINUE        shift, and go to state 121
    DEFAULT         shift, and go to state 122
    DO              shift, and go to state 123
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    FLOAT           shift, and go to state 7
    FOR             shift, and go to state 124
    GOTO            shift, and go to state 125
    IF              shift, and go to state 126
    INLINE          shift, and go to state 8
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    REGISTER        shift, and go to state 11
    RESTRICT        shift, and go to state 12
    RETURN          shift, and go to state 127
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 78
    STATIC          shift, and go to state 15
    SWITCH          shift, and go to state 128
    UNSIGNED        shift, and go to state 16
    VOID            shift, and go to state 17
    VOLATILE        shift, and go to state 18
    WHILE           shift, and go to state 129
    BOOL            shift, and go to state 19
    COMPLEX         shift, and go to state 20
    IMAGINARY       shift, and go to state 21
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 130
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    ';'             shift, and go to state 131
    '{'             shift, and go to state 61
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    declaration                   go to state 133
    declaration_specifiers        go to state 64
    storage_class_specifier       go to state 27
    type_specifier                go to state 28
    enum_specifier                go to state 29
    type_qualifier                go to state 30
    function_specifier            go to state 31
    statement                     go to state 134
    labeled_statement             go to state 135
    compound_statement            go to state 136
    block_item                    go to state 312
    expression_statement          go to state 139
    selection_statement           go to state 140
    iteration_statement           go to state 141
    jump_statement                go to state 142
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 144


State 235

  117 expression_statement: expression ';' •

    $default  reduce using rule 117 (expression_statement)


State 236

  220 expression: expression ',' • assignment_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 313


State 237

   66 direct_declarator: direct_declarator '[' STATIC type_qualifier_list • assignment_expression ']'
   80 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST           shift, and go to state 3
    RESTRICT        shift, and go to state 12
    SIZEOF          shift, and go to state 78
    VOLATILE        shift, and go to state 18
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    type_qualifier                go to state 74
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 314


State 238

   67 direct_declarator: direct_declarator '[' STATIC assignment_expression • ']'

    ']'  shift, and go to state 315


State 239

   70 direct_declarator: direct_declarator '[' '*' ']' •

    $default  reduce using rule 70 (direct_declarator)


State 240

   68 direct_declarator: direct_declarator '[' type_qualifier_list STATIC • assignment_expression ']'

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 316


State 241

   63 direct_declarator: direct_declarator '[' type_qualifier_list ']' •

    $default  reduce using rule 63 (direct_declarator)


State 242

   69 direct_declarator: direct_declarator '[' type_qualifier_list '*' • ']'
  155 unary_expression: '*' • cast_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    ']'             shift, and go to state 317
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 157
    cast_expression     go to state 177


State 243

   62 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression • ']'

    ']'  shift, and go to state 318


State 244

   64 direct_declarator: direct_declarator '[' assignment_expression ']' •

    $default  reduce using rule 64 (direct_declarator)


State 245

   87 identifier_list: IDENTIFIER •

    $default  reduce using rule 87 (identifier_list)


State 246

   73 direct_declarator: direct_declarator push_sym '(' ')' •

    $default  reduce using rule 73 (direct_declarator)


State 247

   85 parameter_declaration: declaration_specifiers • declarator
   86                      | declaration_specifiers •

    IDENTIFIER  shift, and go to state 36
    '('         shift, and go to state 38
    '*'         shift, and go to state 39

    $default  reduce using rule 86 (parameter_declaration)

    declarator         go to state 319
    direct_declarator  go to state 43
    pointer            go to state 44


State 248

   71 direct_declarator: direct_declarator push_sym '(' parameter_type_list • ')'

    ')'  shift, and go to state 320


State 249

   81 parameter_type_list: parameter_list •
   82                    | parameter_list • ',' ELIP
   84 parameter_list: parameter_list • ',' parameter_declaration

    ','  shift, and go to state 321

    $default  reduce using rule 81 (parameter_type_list)


State 250

   83 parameter_list: parameter_declaration •

    $default  reduce using rule 83 (parameter_list)


State 251

   72 direct_declarator: direct_declarator push_sym '(' identifier_list • ')'
   88 identifier_list: identifier_list • ',' IDENTIFIER

    ','  shift, and go to state 322
    ')'  shift, and go to state 323


State 252

   46 enum_specifier: ENUM IDENTIFIER '{' enumerator_list ',' '}' •

    $default  reduce using rule 46 (enum_specifier)


State 253

  147 postfix_expression: '(' type_name • ')' '{' initializer_list '}'
  148                   | '(' type_name • ')' '{' initializer_list ',' '}'
  161 unary_expression: SIZEOF '(' type_name • ')'

    ')'  shift, and go to state 324


State 254

  147 postfix_expression: '(' type_name • ')' '{' initializer_list '}'
  148                   | '(' type_name • ')' '{' initializer_list ',' '}'

    ')'  shift, and go to state 325


State 255

  100 designator: '[' constant_expression • ']'

    ']'  shift, and go to state 326


State 256

  101 designator: '.' IDENTIFIER •

    $default  reduce using rule 101 (designator)


State 257

   92 initializer: '{' initializer_list ',' • '}'
   95 initializer_list: initializer_list ',' • designation initializer
   96                 | initializer_list ',' • initializer

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '{'             shift, and go to state 84
    '}'             shift, and go to state 327
    '('             shift, and go to state 85
    '['             shift, and go to state 165
    '*'             shift, and go to state 86
    '.'             shift, and go to state 166
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    initializer                   go to state 328
    designation                   go to state 329
    designator_list               go to state 170
    designator                    go to state 171
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 118


State 258

   91 initializer: '{' initializer_list '}' •

    $default  reduce using rule 91 (initializer)


State 259

   93 initializer_list: designation initializer •

    $default  reduce using rule 93 (initializer_list)


State 260

   97 designation: designator_list '=' •

    $default  reduce using rule 97 (designation)


State 261

   99 designator_list: designator_list designator •

    $default  reduce using rule 99 (designator_list)


State 262

   40 specifier_qualifier_list: type_specifier specifier_qualifier_list •

    $default  reduce using rule 40 (specifier_qualifier_list)


State 263

   42 specifier_qualifier_list: type_qualifier specifier_qualifier_list •

    $default  reduce using rule 42 (specifier_qualifier_list)


State 264

  147 postfix_expression: '(' type_name ')' • '{' initializer_list '}'
  148                   | '(' type_name ')' • '{' initializer_list ',' '}'
  163 cast_expression: '(' type_name ')' • cast_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '{'             shift, and go to state 330
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression  go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 157
    cast_expression     go to state 331


State 265

  138 primary_expression: '(' expression ')' •

    $default  reduce using rule 138 (primary_expression)


State 266

  144 postfix_expression: postfix_expression ACC IDENTIFIER •

    $default  reduce using rule 144 (postfix_expression)


State 267

  142 postfix_expression: postfix_expression '(' ')' •

    $default  reduce using rule 142 (postfix_expression)


State 268

  141 postfix_expression: postfix_expression '(' argument_expression_list • ')'
  150 argument_expression_list: argument_expression_list • ',' assignment_expression

    ','  shift, and go to state 332
    ')'  shift, and go to state 333


State 269

  149 argument_expression_list: assignment_expression •

    $default  reduce using rule 149 (argument_expression_list)


State 270

  140 postfix_expression: postfix_expression '[' expression • ']'
  220 expression: expression • ',' assignment_expression

    ','  shift, and go to state 236
    ']'  shift, and go to state 334


State 271

  143 postfix_expression: postfix_expression '.' IDENTIFIER •

    $default  reduce using rule 143 (postfix_expression)


State 272

  207 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 207 (assignment_expression)


State 273

  164 nb_cast_expression: cast_expression •

    $default  reduce using rule 164 (nb_cast_expression)


State 274

  166 multiplicative_expression: nb_multiplicative_expression '*' nb_cast_expression •

    $default  reduce using rule 166 (multiplicative_expression)


State 275

  167 multiplicative_expression: nb_multiplicative_expression '/' nb_cast_expression •

    $default  reduce using rule 167 (multiplicative_expression)


State 276

  168 multiplicative_expression: nb_multiplicative_expression '%' nb_cast_expression •

    $default  reduce using rule 168 (multiplicative_expression)


State 277

  169 nb_multiplicative_expression: multiplicative_expression •

    $default  reduce using rule 169 (nb_multiplicative_expression)


State 278

  166 multiplicative_expression: nb_multiplicative_expression • '*' nb_cast_expression
  167                          | nb_multiplicative_expression • '/' nb_cast_expression
  168                          | nb_multiplicative_expression • '%' nb_cast_expression
  171 additive_expression: nb_additive_expression '+' nb_multiplicative_expression •

    '*'  shift, and go to state 201
    '/'  shift, and go to state 202
    '%'  shift, and go to state 203

    $default  reduce using rule 171 (additive_expression)


State 279

  166 multiplicative_expression: nb_multiplicative_expression • '*' nb_cast_expression
  167                          | nb_multiplicative_expression • '/' nb_cast_expression
  168                          | nb_multiplicative_expression • '%' nb_cast_expression
  172 additive_expression: nb_additive_expression '-' nb_multiplicative_expression •

    '*'  shift, and go to state 201
    '/'  shift, and go to state 202
    '%'  shift, and go to state 203

    $default  reduce using rule 172 (additive_expression)


State 280

  173 nb_additive_expression: additive_expression •

    $default  reduce using rule 173 (nb_additive_expression)


State 281

  171 additive_expression: nb_additive_expression • '+' nb_multiplicative_expression
  172                    | nb_additive_expression • '-' nb_multiplicative_expression
  175 shift_expression: nb_shift_expression SHL nb_additive_expression •

    '+'  shift, and go to state 204
    '-'  shift, and go to state 205

    $default  reduce using rule 175 (shift_expression)


State 282

  171 additive_expression: nb_additive_expression • '+' nb_multiplicative_expression
  172                    | nb_additive_expression • '-' nb_multiplicative_expression
  176 shift_expression: nb_shift_expression SHR nb_additive_expression •

    '+'  shift, and go to state 204
    '-'  shift, and go to state 205

    $default  reduce using rule 176 (shift_expression)


State 283

  177 nb_shift_expression: shift_expression •

    $default  reduce using rule 177 (nb_shift_expression)


State 284

  175 shift_expression: nb_shift_expression • SHL nb_additive_expression
  176                 | nb_shift_expression • SHR nb_additive_expression
  181 relational_expression: nb_relational_expression LTE nb_shift_expression •

    SHL  shift, and go to state 206
    SHR  shift, and go to state 207

    $default  reduce using rule 181 (relational_expression)


State 285

  175 shift_expression: nb_shift_expression • SHL nb_additive_expression
  176                 | nb_shift_expression • SHR nb_additive_expression
  182 relational_expression: nb_relational_expression GTE nb_shift_expression •

    SHL  shift, and go to state 206
    SHR  shift, and go to state 207

    $default  reduce using rule 182 (relational_expression)


State 286

  175 shift_expression: nb_shift_expression • SHL nb_additive_expression
  176                 | nb_shift_expression • SHR nb_additive_expression
  179 relational_expression: nb_relational_expression '<' nb_shift_expression •

    SHL  shift, and go to state 206
    SHR  shift, and go to state 207

    $default  reduce using rule 179 (relational_expression)


State 287

  175 shift_expression: nb_shift_expression • SHL nb_additive_expression
  176                 | nb_shift_expression • SHR nb_additive_expression
  180 relational_expression: nb_relational_expression '>' nb_shift_expression •

    SHL  shift, and go to state 206
    SHR  shift, and go to state 207

    $default  reduce using rule 180 (relational_expression)


State 288

  183 nb_relational_expression: relational_expression •

    $default  reduce using rule 183 (nb_relational_expression)


State 289

  179 relational_expression: nb_relational_expression • '<' nb_shift_expression
  180                      | nb_relational_expression • '>' nb_shift_expression
  181                      | nb_relational_expression • LTE nb_shift_expression
  182                      | nb_relational_expression • GTE nb_shift_expression
  185 equality_expression: nb_equality_expression EQUAL nb_relational_expression •

    LTE  shift, and go to state 208
    GTE  shift, and go to state 209
    '<'  shift, and go to state 210
    '>'  shift, and go to state 211

    $default  reduce using rule 185 (equality_expression)


State 290

  179 relational_expression: nb_relational_expression • '<' nb_shift_expression
  180                      | nb_relational_expression • '>' nb_shift_expression
  181                      | nb_relational_expression • LTE nb_shift_expression
  182                      | nb_relational_expression • GTE nb_shift_expression
  186 equality_expression: nb_equality_expression NEQUAL nb_relational_expression •

    LTE  shift, and go to state 208
    GTE  shift, and go to state 209
    '<'  shift, and go to state 210
    '>'  shift, and go to state 211

    $default  reduce using rule 186 (equality_expression)


State 291

  187 nb_equality_expression: equality_expression •

    $default  reduce using rule 187 (nb_equality_expression)


State 292

  185 equality_expression: nb_equality_expression • EQUAL nb_relational_expression
  186                    | nb_equality_expression • NEQUAL nb_relational_expression
  189 and_expression: nb_and_expression '&' nb_equality_expression •

    EQUAL   shift, and go to state 212
    NEQUAL  shift, and go to state 213

    $default  reduce using rule 189 (and_expression)


State 293

  190 nb_and_expression: and_expression •

    $default  reduce using rule 190 (nb_and_expression)


State 294

  189 and_expression: nb_and_expression • '&' nb_equality_expression
  192 exclusive_or_expression: nb_exclusive_or_expression '^' nb_and_expression •

    '&'  shift, and go to state 214

    $default  reduce using rule 192 (exclusive_or_expression)


State 295

  193 nb_exclusive_or_expression: exclusive_or_expression •

    $default  reduce using rule 193 (nb_exclusive_or_expression)


State 296

  192 exclusive_or_expression: nb_exclusive_or_expression • '^' nb_and_expression
  195 inclusive_or_expression: nb_inclusive_or_expression '|' nb_exclusive_or_expression •

    '^'  shift, and go to state 215

    $default  reduce using rule 195 (inclusive_or_expression)


State 297

  200 logical_or_expression: bool_logical_or_expression LogOR address_nonterm • bool_logical_and_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 335
    bool_logical_and_expression   go to state 336


State 298

  205 conditional_expression: bool_logical_or_expression '?' address_nonterm • expression jump_nonterm ':' address_nonterm conditional_expression jump_nonterm

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 337


State 299

  198 logical_and_expression: bool_logical_and_expression LogAND address_nonterm • bool_inclusive_or_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 338
    nb_inclusive_or_expression    go to state 112
    bool_inclusive_or_expression  go to state 339


State 300

  109 labeled_statement: CASE constant_expression ':' • statement

    BREAK           shift, and go to state 119
    CASE            shift, and go to state 120
    CONTINUE        shift, and go to state 121
    DEFAULT         shift, and go to state 122
    DO              shift, and go to state 123
    FOR             shift, and go to state 124
    GOTO            shift, and go to state 125
    IF              shift, and go to state 126
    RETURN          shift, and go to state 127
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 128
    WHILE           shift, and go to state 129
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 130
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    ';'             shift, and go to state 131
    '{'             shift, and go to state 61
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    statement                     go to state 340
    labeled_statement             go to state 135
    compound_statement            go to state 136
    expression_statement          go to state 139
    selection_statement           go to state 140
    iteration_statement           go to state 141
    jump_statement                go to state 142
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 144


State 301

  110 labeled_statement: DEFAULT ':' statement •

    $default  reduce using rule 110 (labeled_statement)


State 302

  123 iteration_statement: DO address_nonterm statement • address_nonterm WHILE '(' bool_expression ')' ';'

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 341


State 303

  125 iteration_statement: FOR '(' declaration • ';' temp ';' temp ')' statement

    ';'  shift, and go to state 342


State 304

  124 iteration_statement: FOR '(' temp • ';' address_nonterm bool_temp ';' address_nonterm temp jump_nonterm ')' address_nonterm statement jump_nonterm

    ';'  shift, and go to state 343


State 305

  131 jump_statement: GOTO IDENTIFIER ';' •

    $default  reduce using rule 131 (jump_statement)


State 306

  119 selection_statement: IF '(' bool_expression • ')' address_nonterm statement jump_nonterm ELSE address_nonterm statement
  120                    | IF '(' bool_expression • ')' address_nonterm statement jump_nonterm

    ')'  shift, and go to state 344


State 307

  130 bool_expression: expression •
  220 expression: expression • ',' assignment_expression

    ','  shift, and go to state 236

    $default  reduce using rule 130 (bool_expression)


State 308

  134 jump_statement: RETURN temp ';' •

    $default  reduce using rule 134 (jump_statement)


State 309

  121 selection_statement: SWITCH '(' expression • ')' statement
  220 expression: expression • ',' assignment_expression

    ','  shift, and go to state 236
    ')'  shift, and go to state 345


State 310

  122 iteration_statement: WHILE '(' address_nonterm • bool_expression ')' address_nonterm statement jump_nonterm

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    bool_expression               go to state 346
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 307


State 311

  108 labeled_statement: IDENTIFIER ':' statement •

    $default  reduce using rule 108 (labeled_statement)


State 312

  114 block_item_list: block_item_list address_nonterm block_item •

    $default  reduce using rule 114 (block_item_list)


State 313

  220 expression: expression ',' assignment_expression •

    $default  reduce using rule 220 (expression)


State 314

   66 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression • ']'

    ']'  shift, and go to state 347


State 315

   67 direct_declarator: direct_declarator '[' STATIC assignment_expression ']' •

    $default  reduce using rule 67 (direct_declarator)


State 316

   68 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression • ']'

    ']'  shift, and go to state 348


State 317

   69 direct_declarator: direct_declarator '[' type_qualifier_list '*' ']' •

    $default  reduce using rule 69 (direct_declarator)


State 318

   62 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression ']' •

    $default  reduce using rule 62 (direct_declarator)


State 319

   85 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 85 (parameter_declaration)


State 320

   71 direct_declarator: direct_declarator push_sym '(' parameter_type_list ')' •

    $default  reduce using rule 71 (direct_declarator)


State 321

   82 parameter_type_list: parameter_list ',' • ELIP
   84 parameter_list: parameter_list ',' • parameter_declaration

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ELIP       shift, and go to state 349

    declaration_specifiers   go to state 247
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    parameter_declaration    go to state 350


State 322

   88 identifier_list: identifier_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 351


State 323

   72 direct_declarator: direct_declarator push_sym '(' identifier_list ')' •

    $default  reduce using rule 72 (direct_declarator)


State 324

  147 postfix_expression: '(' type_name ')' • '{' initializer_list '}'
  148                   | '(' type_name ')' • '{' initializer_list ',' '}'
  161 unary_expression: SIZEOF '(' type_name ')' •

    '{'  shift, and go to state 330

    $default  reduce using rule 161 (unary_expression)


State 325

  147 postfix_expression: '(' type_name ')' • '{' initializer_list '}'
  148                   | '(' type_name ')' • '{' initializer_list ',' '}'

    '{'  shift, and go to state 330


State 326

  100 designator: '[' constant_expression ']' •

    $default  reduce using rule 100 (designator)


State 327

   92 initializer: '{' initializer_list ',' '}' •

    $default  reduce using rule 92 (initializer)


State 328

   96 initializer_list: initializer_list ',' initializer •

    $default  reduce using rule 96 (initializer_list)


State 329

   95 initializer_list: initializer_list ',' designation • initializer

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '{'             shift, and go to state 84
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    initializer                   go to state 352
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 118


State 330

  147 postfix_expression: '(' type_name ')' '{' • initializer_list '}'
  148                   | '(' type_name ')' '{' • initializer_list ',' '}'

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '{'             shift, and go to state 84
    '('             shift, and go to state 85
    '['             shift, and go to state 165
    '*'             shift, and go to state 86
    '.'             shift, and go to state 166
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    initializer                   go to state 167
    initializer_list              go to state 353
    designation                   go to state 169
    designator_list               go to state 170
    designator                    go to state 171
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 118


State 331

  163 cast_expression: '(' type_name ')' cast_expression •

    $default  reduce using rule 163 (cast_expression)


State 332

  150 argument_expression_list: argument_expression_list ',' • assignment_expression

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 354


State 333

  141 postfix_expression: postfix_expression '(' argument_expression_list ')' •

    $default  reduce using rule 141 (postfix_expression)


State 334

  140 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 140 (postfix_expression)


State 335

  203 bool_logical_and_expression: logical_and_expression •

    $default  reduce using rule 203 (bool_logical_and_expression)


State 336

  198 logical_and_expression: bool_logical_and_expression • LogAND address_nonterm bool_inclusive_or_expression
  200 logical_or_expression: bool_logical_or_expression LogOR address_nonterm bool_logical_and_expression •

    LogAND  shift, and go to state 219

    $default  reduce using rule 200 (logical_or_expression)


State 337

  205 conditional_expression: bool_logical_or_expression '?' address_nonterm expression • jump_nonterm ':' address_nonterm conditional_expression jump_nonterm
  220 expression: expression • ',' assignment_expression

    ','  shift, and go to state 236

    $default  reduce using rule 223 (jump_nonterm)

    jump_nonterm  go to state 355


State 338

  196 nb_inclusive_or_expression: inclusive_or_expression •
  201 bool_inclusive_or_expression: inclusive_or_expression •

    '|'       reduce using rule 196 (nb_inclusive_or_expression)
    $default  reduce using rule 201 (bool_inclusive_or_expression)


State 339

  198 logical_and_expression: bool_logical_and_expression LogAND address_nonterm bool_inclusive_or_expression •

    $default  reduce using rule 198 (logical_and_expression)


State 340

  109 labeled_statement: CASE constant_expression ':' statement •

    $default  reduce using rule 109 (labeled_statement)


State 341

  123 iteration_statement: DO address_nonterm statement address_nonterm • WHILE '(' bool_expression ')' ';'

    WHILE  shift, and go to state 356


State 342

  125 iteration_statement: FOR '(' declaration ';' • temp ';' temp ')' statement

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    $default  reduce using rule 127 (temp)

    temp                          go to state 357
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 229


State 343

  124 iteration_statement: FOR '(' temp ';' • address_nonterm bool_temp ';' address_nonterm temp jump_nonterm ')' address_nonterm statement jump_nonterm

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 358


State 344

  119 selection_statement: IF '(' bool_expression ')' • address_nonterm statement jump_nonterm ELSE address_nonterm statement
  120                    | IF '(' bool_expression ')' • address_nonterm statement jump_nonterm

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 359


State 345

  121 selection_statement: SWITCH '(' expression ')' • statement

    BREAK           shift, and go to state 119
    CASE            shift, and go to state 120
    CONTINUE        shift, and go to state 121
    DEFAULT         shift, and go to state 122
    DO              shift, and go to state 123
    FOR             shift, and go to state 124
    GOTO            shift, and go to state 125
    IF              shift, and go to state 126
    RETURN          shift, and go to state 127
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 128
    WHILE           shift, and go to state 129
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 130
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    ';'             shift, and go to state 131
    '{'             shift, and go to state 61
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    statement                     go to state 360
    labeled_statement             go to state 135
    compound_statement            go to state 136
    expression_statement          go to state 139
    selection_statement           go to state 140
    iteration_statement           go to state 141
    jump_statement                go to state 142
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 144


State 346

  122 iteration_statement: WHILE '(' address_nonterm bool_expression • ')' address_nonterm statement jump_nonterm

    ')'  shift, and go to state 361


State 347

   66 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression ']' •

    $default  reduce using rule 66 (direct_declarator)


State 348

   68 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression ']' •

    $default  reduce using rule 68 (direct_declarator)


State 349

   82 parameter_type_list: parameter_list ',' ELIP •

    $default  reduce using rule 82 (parameter_type_list)


State 350

   84 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 84 (parameter_list)


State 351

   88 identifier_list: identifier_list ',' IDENTIFIER •

    $default  reduce using rule 88 (identifier_list)


State 352

   95 initializer_list: initializer_list ',' designation initializer •

    $default  reduce using rule 95 (initializer_list)


State 353

   95 initializer_list: initializer_list • ',' designation initializer
   96                 | initializer_list • ',' initializer
  147 postfix_expression: '(' type_name ')' '{' initializer_list • '}'
  148                   | '(' type_name ')' '{' initializer_list • ',' '}'

    ','  shift, and go to state 362
    '}'  shift, and go to state 363


State 354

  150 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  reduce using rule 150 (argument_expression_list)


State 355

  205 conditional_expression: bool_logical_or_expression '?' address_nonterm expression jump_nonterm • ':' address_nonterm conditional_expression jump_nonterm

    ':'  shift, and go to state 364


State 356

  123 iteration_statement: DO address_nonterm statement address_nonterm WHILE • '(' bool_expression ')' ';'

    '('  shift, and go to state 365


State 357

  125 iteration_statement: FOR '(' declaration ';' temp • ';' temp ')' statement

    ';'  shift, and go to state 366


State 358

  124 iteration_statement: FOR '(' temp ';' address_nonterm • bool_temp ';' address_nonterm temp jump_nonterm ')' address_nonterm statement jump_nonterm

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    $default  reduce using rule 129 (bool_temp)

    bool_temp                     go to state 367
    bool_expression               go to state 368
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 307


State 359

  119 selection_statement: IF '(' bool_expression ')' address_nonterm • statement jump_nonterm ELSE address_nonterm statement
  120                    | IF '(' bool_expression ')' address_nonterm • statement jump_nonterm

    BREAK           shift, and go to state 119
    CASE            shift, and go to state 120
    CONTINUE        shift, and go to state 121
    DEFAULT         shift, and go to state 122
    DO              shift, and go to state 123
    FOR             shift, and go to state 124
    GOTO            shift, and go to state 125
    IF              shift, and go to state 126
    RETURN          shift, and go to state 127
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 128
    WHILE           shift, and go to state 129
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 130
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    ';'             shift, and go to state 131
    '{'             shift, and go to state 61
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    statement                     go to state 369
    labeled_statement             go to state 135
    compound_statement            go to state 136
    expression_statement          go to state 139
    selection_statement           go to state 140
    iteration_statement           go to state 141
    jump_statement                go to state 142
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 144


State 360

  121 selection_statement: SWITCH '(' expression ')' statement •

    $default  reduce using rule 121 (selection_statement)


State 361

  122 iteration_statement: WHILE '(' address_nonterm bool_expression ')' • address_nonterm statement jump_nonterm

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 370


State 362

   95 initializer_list: initializer_list ',' • designation initializer
   96                 | initializer_list ',' • initializer
  148 postfix_expression: '(' type_name ')' '{' initializer_list ',' • '}'

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '{'             shift, and go to state 84
    '}'             shift, and go to state 371
    '('             shift, and go to state 85
    '['             shift, and go to state 165
    '*'             shift, and go to state 86
    '.'             shift, and go to state 166
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    initializer                   go to state 328
    designation                   go to state 329
    designator_list               go to state 170
    designator                    go to state 171
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 118


State 363

  147 postfix_expression: '(' type_name ')' '{' initializer_list '}' •

    $default  reduce using rule 147 (postfix_expression)


State 364

  205 conditional_expression: bool_logical_or_expression '?' address_nonterm expression jump_nonterm ':' • address_nonterm conditional_expression jump_nonterm

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 372


State 365

  123 iteration_statement: DO address_nonterm statement address_nonterm WHILE '(' • bool_expression ')' ';'

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    bool_expression               go to state 373
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 307


State 366

  125 iteration_statement: FOR '(' declaration ';' temp ';' • temp ')' statement

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    $default  reduce using rule 127 (temp)

    temp                          go to state 374
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 229


State 367

  124 iteration_statement: FOR '(' temp ';' address_nonterm bool_temp • ';' address_nonterm temp jump_nonterm ')' address_nonterm statement jump_nonterm

    ';'  shift, and go to state 375


State 368

  128 bool_temp: bool_expression •

    $default  reduce using rule 128 (bool_temp)


State 369

  119 selection_statement: IF '(' bool_expression ')' address_nonterm statement • jump_nonterm ELSE address_nonterm statement
  120                    | IF '(' bool_expression ')' address_nonterm statement • jump_nonterm

    $default  reduce using rule 223 (jump_nonterm)

    jump_nonterm  go to state 376


State 370

  122 iteration_statement: WHILE '(' address_nonterm bool_expression ')' address_nonterm • statement jump_nonterm

    BREAK           shift, and go to state 119
    CASE            shift, and go to state 120
    CONTINUE        shift, and go to state 121
    DEFAULT         shift, and go to state 122
    DO              shift, and go to state 123
    FOR             shift, and go to state 124
    GOTO            shift, and go to state 125
    IF              shift, and go to state 126
    RETURN          shift, and go to state 127
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 128
    WHILE           shift, and go to state 129
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 130
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    ';'             shift, and go to state 131
    '{'             shift, and go to state 61
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    statement                     go to state 377
    labeled_statement             go to state 135
    compound_statement            go to state 136
    expression_statement          go to state 139
    selection_statement           go to state 140
    iteration_statement           go to state 141
    jump_statement                go to state 142
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 144


State 371

  148 postfix_expression: '(' type_name ')' '{' initializer_list ',' '}' •

    $default  reduce using rule 148 (postfix_expression)


State 372

  205 conditional_expression: bool_logical_or_expression '?' address_nonterm expression jump_nonterm ':' address_nonterm • conditional_expression jump_nonterm

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 157
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 378


State 373

  123 iteration_statement: DO address_nonterm statement address_nonterm WHILE '(' bool_expression • ')' ';'

    ')'  shift, and go to state 379


State 374

  125 iteration_statement: FOR '(' declaration ';' temp ';' temp • ')' statement

    ')'  shift, and go to state 380


State 375

  124 iteration_statement: FOR '(' temp ';' address_nonterm bool_temp ';' • address_nonterm temp jump_nonterm ')' address_nonterm statement jump_nonterm

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 381


State 376

  119 selection_statement: IF '(' bool_expression ')' address_nonterm statement jump_nonterm • ELSE address_nonterm statement
  120                    | IF '(' bool_expression ')' address_nonterm statement jump_nonterm •

    ELSE  shift, and go to state 382

    $default  reduce using rule 120 (selection_statement)


State 377

  122 iteration_statement: WHILE '(' address_nonterm bool_expression ')' address_nonterm statement • jump_nonterm

    $default  reduce using rule 223 (jump_nonterm)

    jump_nonterm  go to state 383


State 378

  205 conditional_expression: bool_logical_or_expression '?' address_nonterm expression jump_nonterm ':' address_nonterm conditional_expression • jump_nonterm

    $default  reduce using rule 223 (jump_nonterm)

    jump_nonterm  go to state 384


State 379

  123 iteration_statement: DO address_nonterm statement address_nonterm WHILE '(' bool_expression ')' • ';'

    ';'  shift, and go to state 385


State 380

  125 iteration_statement: FOR '(' declaration ';' temp ';' temp ')' • statement

    BREAK           shift, and go to state 119
    CASE            shift, and go to state 120
    CONTINUE        shift, and go to state 121
    DEFAULT         shift, and go to state 122
    DO              shift, and go to state 123
    FOR             shift, and go to state 124
    GOTO            shift, and go to state 125
    IF              shift, and go to state 126
    RETURN          shift, and go to state 127
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 128
    WHILE           shift, and go to state 129
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 130
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    ';'             shift, and go to state 131
    '{'             shift, and go to state 61
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    statement                     go to state 386
    labeled_statement             go to state 135
    compound_statement            go to state 136
    expression_statement          go to state 139
    selection_statement           go to state 140
    iteration_statement           go to state 141
    jump_statement                go to state 142
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 144


State 381

  124 iteration_statement: FOR '(' temp ';' address_nonterm bool_temp ';' address_nonterm • temp jump_nonterm ')' address_nonterm statement jump_nonterm

    SIZEOF          shift, and go to state 78
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 81
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    $default  reduce using rule 127 (temp)

    temp                          go to state 387
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 229


State 382

  119 selection_statement: IF '(' bool_expression ')' address_nonterm statement jump_nonterm ELSE • address_nonterm statement

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 388


State 383

  122 iteration_statement: WHILE '(' address_nonterm bool_expression ')' address_nonterm statement jump_nonterm •

    $default  reduce using rule 122 (iteration_statement)


State 384

  205 conditional_expression: bool_logical_or_expression '?' address_nonterm expression jump_nonterm ':' address_nonterm conditional_expression jump_nonterm •

    $default  reduce using rule 205 (conditional_expression)


State 385

  123 iteration_statement: DO address_nonterm statement address_nonterm WHILE '(' bool_expression ')' ';' •

    $default  reduce using rule 123 (iteration_statement)


State 386

  125 iteration_statement: FOR '(' declaration ';' temp ';' temp ')' statement •

    $default  reduce using rule 125 (iteration_statement)


State 387

  124 iteration_statement: FOR '(' temp ';' address_nonterm bool_temp ';' address_nonterm temp • jump_nonterm ')' address_nonterm statement jump_nonterm

    $default  reduce using rule 223 (jump_nonterm)

    jump_nonterm  go to state 389


State 388

  119 selection_statement: IF '(' bool_expression ')' address_nonterm statement jump_nonterm ELSE address_nonterm • statement

    BREAK           shift, and go to state 119
    CASE            shift, and go to state 120
    CONTINUE        shift, and go to state 121
    DEFAULT         shift, and go to state 122
    DO              shift, and go to state 123
    FOR             shift, and go to state 124
    GOTO            shift, and go to state 125
    IF              shift, and go to state 126
    RETURN          shift, and go to state 127
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 128
    WHILE           shift, and go to state 129
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 130
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    ';'             shift, and go to state 131
    '{'             shift, and go to state 61
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    statement                     go to state 390
    labeled_statement             go to state 135
    compound_statement            go to state 136
    expression_statement          go to state 139
    selection_statement           go to state 140
    iteration_statement           go to state 141
    jump_statement                go to state 142
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 144


State 389

  124 iteration_statement: FOR '(' temp ';' address_nonterm bool_temp ';' address_nonterm temp jump_nonterm • ')' address_nonterm statement jump_nonterm

    ')'  shift, and go to state 391


State 390

  119 selection_statement: IF '(' bool_expression ')' address_nonterm statement jump_nonterm ELSE address_nonterm statement •

    $default  reduce using rule 119 (selection_statement)


State 391

  124 iteration_statement: FOR '(' temp ';' address_nonterm bool_temp ';' address_nonterm temp jump_nonterm ')' • address_nonterm statement jump_nonterm

    $default  reduce using rule 222 (address_nonterm)

    address_nonterm  go to state 392


State 392

  124 iteration_statement: FOR '(' temp ';' address_nonterm bool_temp ';' address_nonterm temp jump_nonterm ')' address_nonterm • statement jump_nonterm

    BREAK           shift, and go to state 119
    CASE            shift, and go to state 120
    CONTINUE        shift, and go to state 121
    DEFAULT         shift, and go to state 122
    DO              shift, and go to state 123
    FOR             shift, and go to state 124
    GOTO            shift, and go to state 125
    IF              shift, and go to state 126
    RETURN          shift, and go to state 127
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 128
    WHILE           shift, and go to state 129
    INC             shift, and go to state 79
    DEC             shift, and go to state 80
    IDENTIFIER      shift, and go to state 130
    CONSTANT        shift, and go to state 82
    STRING_LITERAL  shift, and go to state 83
    ';'             shift, and go to state 131
    '{'             shift, and go to state 61
    '('             shift, and go to state 85
    '*'             shift, and go to state 86
    '&'             shift, and go to state 87
    '+'             shift, and go to state 88
    '-'             shift, and go to state 89
    '~'             shift, and go to state 90
    '!'             shift, and go to state 91

    statement                     go to state 393
    labeled_statement             go to state 135
    compound_statement            go to state 136
    expression_statement          go to state 139
    selection_statement           go to state 140
    iteration_statement           go to state 141
    jump_statement                go to state 142
    primary_expression            go to state 93
    postfix_expression            go to state 94
    unary_expression              go to state 95
    cast_expression               go to state 96
    multiplicative_expression     go to state 97
    nb_multiplicative_expression  go to state 98
    additive_expression           go to state 99
    nb_additive_expression        go to state 100
    shift_expression              go to state 101
    nb_shift_expression           go to state 102
    relational_expression         go to state 103
    nb_relational_expression      go to state 104
    equality_expression           go to state 105
    nb_equality_expression        go to state 106
    and_expression                go to state 107
    nb_and_expression             go to state 108
    exclusive_or_expression       go to state 109
    nb_exclusive_or_expression    go to state 110
    inclusive_or_expression       go to state 111
    nb_inclusive_or_expression    go to state 112
    logical_and_expression        go to state 113
    logical_or_expression         go to state 114
    bool_logical_or_expression    go to state 115
    bool_logical_and_expression   go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 143
    expression                    go to state 144


State 393

  124 iteration_statement: FOR '(' temp ';' address_nonterm bool_temp ';' address_nonterm temp jump_nonterm ')' address_nonterm statement • jump_nonterm

    $default  reduce using rule 223 (jump_nonterm)

    jump_nonterm  go to state 394


State 394

  124 iteration_statement: FOR '(' temp ';' address_nonterm bool_temp ';' address_nonterm temp jump_nonterm ')' address_nonterm statement jump_nonterm •

    $default  reduce using rule 124 (iteration_statement)
